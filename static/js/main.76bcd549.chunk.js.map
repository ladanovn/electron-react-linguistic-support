{"version":3,"sources":["components/Loader/index.jsx","components/Cleaner/index.jsx","libs/sort/index.js","components/Spliter/index.jsx","libs/porter/const.js","libs/porter/index.js","components/Stemming/index.jsx","components/Grouping/index.jsx","components/WeightCoefficient/index.jsx","components/Relevance/index.jsx","components/NGram/index.jsx","components/Main.jsx","components/App.jsx","index.js"],"names":["Loader","_this","this","react_default","a","createElement","Segment","placeholder","Grid","columns","stackable","textAlign","Divider","vertical","Row","verticalAlign","Column","Header","icon","Icon","name","Button","id","secondary","Input","type","encType","Form","Field","control","TextArea","label","value","props","state","data","fullText","onChange","_","event","newState","JSON","parse","stringify","changeState","autoHeight","_this2","document","getElementById","addEventListener","file","target","files","reader","FileReader","onload","result","bind","readAsText","navigator","clipboard","readText","then","text","catch","err","Component","Cleaner","clearedText","replace","toLowerCase","Array","prototype","customeSort","match","QuickSort","A","length","b","p","i","concat","dropdownOptions","sorting","defaultSort","words","ascendingFromBeginningSort","localeCompare","descendingFromBeginningSort","asceningFromEndingSort","rev_a","split","reverse","join","rev_b","descendingFromEndingSort","Spliter","filter","word","Dropdown","options","defaultValue","Table","Body","map","index","key","Cell","VOWELS","CONSONANTS","sortByLength","perfective_gerund","sort","reflexive","adjective","participle","verb","noun","derivational","superlative","Porter","Object","classCallCheck","createClass","stem","wordParts","findWordParts","console","log","stemmedWord","stemByWordParts","haveReflexive","haveAdjective","removeEnding","RV","slice","R2","ending","RVInd","Math","min","apply","toConsumableArray","symbol","PORTER_CONST","includes","substr","R1Ind","R1","R2Ind","endings","Stemming","porter","stemmedWords","stemAll","Grouping","groupedWords","forEach","existingWordId","findIndex","el","count","push","WeightCoefficient","weightCoef","width","Relevance","circular","link","e","matchingWords","R","maxR","avgCoef","k","coefGroup","groupedWord","find","gWord","relevance","getNGrams","n","clrText","ngrams","_loop","gram","existNgram","NGram","Main","params","possibleConstructorReturn","getPrototypeOf","call","panes","menuItem","render","Tab","Pane","components_Loader","components_Cleaner","components_Spliter","components_Stemming","components_Grouping","components_WeightCoefficient","components_Relevance","components_NGram","menu","fluid","tabular","pointing","App","setState","className","components_Main","ReactDOM","src_components_App"],"mappings":"2UAqGeA,mLAvFJ,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,aAAW,GAClBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,QAAS,EAAGC,WAAS,EAACC,UAAU,UACpCR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASC,UAAQ,GAAjB,MACAV,EAAAC,EAAAC,cAACG,EAAA,EAAKM,IAAN,CAAUC,cAAc,UACtBZ,EAAAC,EAAAC,cAACG,EAAA,EAAKQ,OAAN,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQC,MAAI,GACVf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,KAAK,UADb,oFAGAjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQC,GAAG,mBAAmBC,WAAS,GACpC,IADH,mDAEW,MAGbpB,EAAAC,EAAAC,cAACG,EAAA,EAAKQ,OAAN,KACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQC,MAAI,GACVf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,KAAK,SADb,yCAGAjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEF,GAAG,kBACHG,KAAK,OACLC,QAAQ,6BAOpBvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,CACEN,GAAG,WACHO,QAASC,IACTC,MAAM,wFACNC,MAAO9B,KAAK+B,MAAMC,MAAMC,KAAKC,SAC7BC,SAAU,SAACC,EAAGC,GACZ,IAAMC,EAAWC,KAAKC,MAAMD,KAAKE,UAAU1C,EAAKgC,MAAMC,QACtDM,EAASL,KAAKC,SAAWG,EAAMP,MAC/B/B,EAAKgC,MAAMW,YAAYJ,IAEzBK,YAAU,kDAOA,IAAAC,EAAA5C,KAClB6C,SAASC,eAAe,mBAAmBC,iBACzC,SACA,SAAAV,GACE,IACMW,EADQX,EAAMY,OAAOC,MACR,GACbC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAShB,GACvB,IAAMC,EAAWC,KAAKC,MAAMD,KAAKE,UAAUzC,KAAK+B,MAAMC,QACtDM,EAASL,KAAKC,SAAWG,EAAMY,OAAOK,OACtCtD,KAAK+B,MAAMW,YAAYJ,IACvBiB,KAAKX,GACPO,EAAOK,WAAWR,KAEpB,GAGFH,SAASC,eAAe,oBAAoBC,iBAC1C,QACA,WACEU,UAAUC,UACPC,WACAC,KAAK,SAAAC,GACJ,IAAMvB,EAAWC,KAAKC,MAAMD,KAAKE,UAAUG,EAAKb,MAAMC,QACtDM,EAASL,KAAKC,SAAW2B,EACzBjB,EAAKb,MAAMW,YAAYJ,KAExBwB,MAAM,SAAAC,GACL,IAAMzB,EAAWC,KAAKC,MAAMD,KAAKE,UAAUG,EAAKb,MAAMC,QACtDM,EAASL,KAAKC,SAAW,GACzBU,EAAKb,MAAMW,YAAYJ,OAG7B,UAnFe0B,iBCiBNC,+LAlBX,IAAM3B,EAAWC,KAAKC,MAAMD,KAAKE,UAAUzC,KAAK+B,MAAMC,QACtDM,EAASL,KAAKiC,YAAwB5B,EAASL,KAAKC,SARnDiC,QAAQ,wBAAe,KACvBA,QAAQ,OAAQ,KAChBC,cAODpE,KAAK+B,MAAMW,YAAYJ,oCAGvB,OACErC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,CACEC,QAASC,IACTC,MAAM,wFACNC,MAAO9B,KAAK+B,MAAMC,MAAMC,KAAKiC,YAC7BvB,YAAU,YAbEqB,+BCVtBK,MAAMC,UAAUC,YAAc,SAAUC,GACpC,OAGJ,SAASC,EAAUC,EAAGF,GAClB,GAAiB,IAAbE,EAAEC,OAAc,MAAO,GAC3B,IAAMzE,EAAI,GACV,IAAM0E,EAAI,GACV,IAAMC,EAAIH,EAAE,GAEZ,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAEC,OAAQG,IACtBN,EAAME,EAAEI,GAAID,GAAI3E,EAAEA,EAAEyE,QAAUD,EAAEI,GAC/BF,EAAEA,EAAED,QAAUD,EAAEI,GAEzB,OAAOL,EAAUvE,EAAGsE,GAAOO,OAAOF,EAAGJ,EAAUG,EAAGJ,IAb3CC,CAAUzE,KAAMwE,IAgBpB,IAAMQ,EAAkB,CAAC,CACxBnB,KAAM,sEACN/B,MAAO,eAEX,CACI+B,KAAM,6OACN/B,MAAO,8BAEX,CACI+B,KAAM,2NACN/B,MAAO,+BAEX,CACI+B,KAAM,uOACN/B,MAAO,0BAEX,CACI+B,KAAM,qNACN/B,MAAO,6BAIFmD,EAAU,CACnBC,YAOG,SAAqBC,GAExB,OAAOA,GARPC,2BAWG,SAAoCD,GAEvC,OAAOA,EAAMZ,YAAY,SAACrE,EAAG0E,GACzB,OAAO1E,EAAEmF,cAAcT,GAAK,KAbhCU,4BAiBG,SAAqCH,GAExC,OAAOA,EAAMZ,YAAY,SAACrE,EAAG0E,GACzB,OAAOA,EAAES,cAAcnF,GAAK,KAnBhCqF,uBAuBG,SAAgCJ,GAEnC,OAAOA,EAAMZ,YAAY,SAACrE,EAAG0E,GACzB,IAAMY,EAAQtF,EACTuF,MAAM,IACNC,UACAC,KAAK,IAEJC,EAAQhB,EACTa,MAAM,IACNC,UACAC,KAAK,IAEV,OAAOH,EAAMH,cAAcO,GAAS,KAnCxCC,yBAuCG,SAAkCV,GAErC,OAAOA,EAAMZ,YAAY,SAACrE,EAAG0E,GACzB,IAAMY,EAAQtF,EACTuF,MAAM,IACNC,UACAC,KAAK,IAEJC,EAAQhB,EACTa,MAAM,IACNC,UACAC,KAAK,IAEV,OAAOC,EAAMP,cAAcG,GAAS,UCjD7BM,8LAxCX,IAAMxD,EAAWC,KAAKC,MAAMD,KAAKE,UAAUzC,KAAK+B,MAAMC,QACtDM,EAASL,KAAKkD,MAAQnF,KAAK+B,MAAMC,MAAMC,KAAKiC,YACzCuB,MAAM,KACNM,OAAO,SAAAC,GAAI,MAAa,KAATA,GAAeA,EAAKrB,QAAU,IAChD3E,KAAK+B,MAAMW,YAAYJ,oCAGhB,IAAAvC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACEzB,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CACEC,QAASlB,EACTmB,aAAcnB,EAAgB,GAAGlD,MACjCK,SAAU,SAACC,EAAGC,GACZ,IAAMC,EAAWC,KAAKC,MAAMD,KAAKE,UAAU1C,EAAKgC,MAAMC,QACtDM,EAASL,KAAKkD,MAAQF,EAAQ5C,EAAMP,OAAOQ,EAASL,KAAKkD,OAEzDpF,EAAKgC,MAAMW,YAAYJ,OAI7BrC,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACEzB,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAACiG,EAAA,EAAMC,KAAP,KACGrG,KAAK+B,MAAMC,MAAMC,KAAKkD,MAAMmB,IAAI,SAACN,EAAMO,GACtC,OACEtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMxF,IAAP,CAAW4F,IAAKD,GACdtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMK,KAAP,KAAaT,iBA9BXhC,qBCiFT0C,EAAS,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UACvDC,EAAa,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UCrFnIC,EAAe,SAAC1G,EAAG0E,GAAJ,OAAU1E,EAAEyE,QAAUC,EAAED,QAAU,EAAI,GACrDkC,EDH2B,CAAC,SAAK,qBAAO,iCAC1C,eAAM,2BAAQ,uCAAU,eAAM,2BAAQ,wCCEeC,KAAKF,GACxDG,EDiCmB,CAAC,eAAM,gBCjCSD,KAAKF,GACxCI,EDFmB,CACrB,eACA,eACA,eACA,eACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,qBACA,qBACA,qBACA,qBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBCxBqCF,KAAKF,GACxCK,ED0BoB,CACtB,eAAM,eAAM,eAAM,eAAM,SACxB,qBAAO,qBAAO,sBC5ByBH,KAAKF,GAC1CM,EDgCc,CAChB,eAAM,eAAM,qBAAO,qBAAO,eAAM,SAAK,SAAK,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,qBAAO,qBAChG,qBAAO,qBAAO,qBAAO,2BAAQ,2BAAQ,qBAAO,qBAAO,qBAAO,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,qBAAO,qBAAO,qBAAO,eAAM,qBAAO,qBAAO,eAAM,eAAM,qBAAO,qBAAO,qBAAO,qBAAO,eAAM,UClChKJ,KAAKF,GAC9BO,EDoCc,CAChB,SACA,eACA,eACA,eACA,eACA,SACA,2BACA,qBACA,qBACA,eACA,eACA,SACA,qBACA,eACA,eACA,eACA,SACA,qBACA,eACA,qBACA,eACA,eACA,eACA,SACA,SACA,eACA,qBACA,eACA,SACA,SACA,eACA,eACA,SACA,eACA,eACA,UCxE2BL,KAAKF,GAC9BQ,ED2EsB,CAAC,qBAAO,4BC3EWN,KAAKF,GAC9CS,EDyEqB,CAAC,qBAAO,4BCzEUP,KAAKF,GAErCU,EAAb,oBAAAA,IAAAC,OAAAC,EAAA,EAAAD,CAAAvH,KAAAsH,GAAA,OAAAC,OAAAE,EAAA,EAAAF,CAAAD,EAAA,EAAAd,IAAA,UAAA1E,MAAA,SAEYqD,GAAO,IAAApF,EAAAC,KACX,OAAOmF,EAAMmB,IAAI,SAAAN,GAAI,OAAIjG,EAAK2H,KAAK1B,OAH3C,CAAAQ,IAAA,OAAA1E,MAAA,SAMSkE,GAED,IAAM2B,EAAY3H,KAAK4H,cAAc5B,GACrC6B,QAAQC,IAAIvF,KAAKC,MAAMD,KAAKE,UAAUkF,KACtC,IAAMI,EAAc/H,KAAKgI,gBAAgBL,GAAW3B,KAEpD,OADA6B,QAAQC,IAAI9H,KAAKgI,gBAAgBL,IAC1BI,IAZf,CAAAvB,IAAA,kBAAA1E,MAAA,SAeoBG,GAEZ,IAAIgG,EACAC,EASJ,GAPAlI,KAAKmI,aAAalG,EAAM4E,GAExBoB,EAAgBjI,KAAKmI,aAAalG,EAAM8E,GACxCmB,EAAgBlI,KAAKmI,aAAalG,EAAM+E,GAExChH,KAAKmI,aAAalG,EAAMgF,GAEpBiB,EACA,OAAOjG,EAgBX,GAdAjC,KAAKmI,aAAalG,EAAMiF,GAEnBe,GACDjI,KAAKmI,aAAalG,EAAMkF,GAIc,WAAtClF,EAAKmG,GAAGC,MAAMpG,EAAKmG,GAAGzD,OAAS,KAC/B1C,EAAKmG,GAAKnG,EAAKmG,GAAGC,MAAM,EAAGpG,EAAKmG,GAAGzD,OAAS,GAC5C1C,EAAK+D,KAAO/D,EAAK+D,KAAKqC,MAAM,EAAGpG,EAAK+D,KAAKrB,OAAS,IAKlD1C,EAAKqG,GACL,IAAK,IAAIxD,EAAI,EAAGA,GAAKsC,EAAazC,OAAS,EAAGG,IAAK,CAC/C,IAAMyD,EAASnB,EAAatC,GAE5B,GAAI7C,EAAKqG,GAAGD,MAAMpG,EAAKqG,GAAG3D,OAAS4D,EAAO5D,UAAY4D,EAAQ,CAC1DtG,EAAKmG,GAAKnG,EAAKmG,GAAGC,MAAM,EAAGpG,EAAKmG,GAAGzD,OAAS4D,EAAO5D,QACnD1C,EAAK+D,KAAO/D,EAAK+D,KAAKqC,MAAM,EAAGpG,EAAK+D,KAAKrB,OAAS4D,EAAO5D,QACzD,OAQZ,OAFA3E,KAAKmI,aAAalG,EAAMoF,EAAYtC,OAAO,CAAC,SAAK,YAE1C9C,IA3Df,CAAAuE,IAAA,gBAAA1E,MAAA,SA8DkBkE,GAEV,IAAMwC,EAAQC,KAAKC,IAALC,MAAAF,KAAIlB,OAAAqB,EAAA,EAAArB,CAAQvB,EAAKP,MAAM,IAAIa,IAAI,SAACuC,EAAQtC,GAClD,OAAKuC,EAAoBC,SAASF,IAAaC,EAAwBC,SAAS/C,EAAKO,EAAQ,IAClFA,EACCP,EAAKrB,WAGfyD,EAAKpC,EAAKgD,OAAOR,EAAQ,EAAGxC,EAAKrB,QAEjCsE,EAAQR,KAAKC,IAALC,MAAAF,KAAIlB,OAAAqB,EAAA,EAAArB,CAAQa,EAAG3C,MAAM,IAAIa,IAAI,SAACuC,EAAQtC,GAChD,OAAKuC,EAAwBC,SAASF,IAAaC,EAAoBC,SAASX,EAAG7B,EAAQ,IAChFA,EACC6B,EAAGzD,WAGbuE,EAAKd,EAAGY,OAAOC,EAAQ,EAAGb,EAAGzD,QAE7BwE,EAAQV,KAAKC,IAALC,MAAAF,KAAIlB,OAAAqB,EAAA,EAAArB,CAAQ2B,EAAGzD,MAAM,IAAIa,IAAI,SAACuC,EAAQtC,GAChD,OAAKuC,EAAwBC,SAASF,IAAaC,EAAoBC,SAASG,EAAG3C,EAAQ,IAChFA,EACC2C,EAAGvE,WAGb2D,EAAKY,EAAGF,OAAOG,EAAQ,EAAGD,EAAGvE,QAEnC,MAAO,CACHqB,OACAoC,KACAc,KACAZ,QA5FZ,CAAA9B,IAAA,eAAA1E,MAAA,SAgGiBG,EAAMmH,GACf,IAAK,IAAItE,EAAI,EAAGA,GAAKsE,EAAQzE,OAAS,EAAGG,IAAK,CAC1C,IAAMyD,EAASa,EAAQtE,GAEvB,GAAI7C,EAAKmG,GAAGC,MAAMpG,EAAKmG,GAAGzD,OAAS4D,EAAO5D,UAAY4D,EAIlD,OAHAtG,EAAKmG,GAAKnG,EAAKmG,GAAGC,MAAM,EAAGpG,EAAKmG,GAAGzD,OAAS4D,EAAO5D,QACnD1C,EAAK+D,KAAO/D,EAAK+D,KAAKqC,MAAM,EAAGpG,EAAK+D,KAAKrB,OAAS4D,EAAO5D,SAElD,EAIf,OAAO,MA5Gf2C,EAAA,GCsCe+B,+LA1CX,IAAMC,EAAS,IAAIhC,EAEbhF,EAAWC,KAAKC,MAAMD,KAAKE,UAAUzC,KAAK+B,MAAMC,QACtDM,EAASL,KAAKsH,aAAeD,EAAOE,QAAQxJ,KAAK+B,MAAMC,MAAMC,KAAKkD,OAAOY,OAAO,SAAAC,GAAI,MAAa,KAATA,IACxFhG,KAAK+B,MAAMW,YAAYJ,oCAGhB,IAAAvC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACEzB,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CACEC,QAASlB,EACTmB,aAAcnB,EAAgB,GAAGlD,MACjCK,SAAU,SAACC,EAAGC,GACZ,IAAMC,EAAWC,KAAKC,MAAMD,KAAKE,UAAU1C,EAAKgC,MAAMC,QACtDM,EAASL,KAAKsH,aAAetE,EAAQ5C,EAAMP,OACzCQ,EAASL,KAAKsH,cAGhBxJ,EAAKgC,MAAMW,YAAYJ,OAI7BrC,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACEzB,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAACiG,EAAA,EAAMC,KAAP,KACGrG,KAAK+B,MAAMC,MAAMC,KAAKsH,aAAajD,IAAI,SAACN,EAAMO,GAC7C,OACEtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMxF,IAAP,CAAW4F,IAAKD,GACdtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMK,KAAP,KAAaT,iBAhCVhC,aCoCRyF,+LArCX,IAAMnH,EAAWC,KAAKC,MAAMD,KAAKE,UAAUzC,KAAK+B,MAAMC,QAChD0H,EAAe,GACrB1J,KAAK+B,MAAMC,MAAMC,KAAKsH,aAAaI,QAAQ,SAAA3D,GACzC,IAAM4D,EAAiBF,EAAaG,UAAU,SAAAC,GAAE,OAAIA,EAAGhI,QAAUkE,KACzC,IAApB4D,EAAuBF,EAAaE,GAAgBG,OAAS,EAE/DL,EAAaM,KAAK,CAChBlI,MAAOkE,EACP+D,MAAO,MAGbzH,EAASL,KAAKyH,aAAeA,EAAa5C,KAAK,SAAC5G,EAAG0E,GAAJ,OAAUA,EAAEmF,MAAQ7J,EAAE6J,QACrE/J,KAAK+B,MAAMW,YAAYJ,oCAIvB,OACErC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACEzB,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAACiG,EAAA,EAAMC,KAAP,KACGrG,KAAK+B,MAAMC,MAAMC,KAAKyH,aAAapD,IAAI,SAACnB,EAAOoB,GAC9C,OACEtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMxF,IAAP,CAAW4F,IAAKD,GACdtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMK,KAAP,KAAatB,EAAMrD,OACnB7B,EAAAC,EAAAC,cAACiG,EAAA,EAAMK,KAAP,KAAatB,EAAM4E,qBA3BhB/F,aCyCRiG,+LAvCX,IAAM3H,EAAWC,KAAKC,MAAMD,KAAKE,UAAUzC,KAAK+B,MAAMC,QACtDhC,KAAK+B,MAAMC,MAAMC,KAAKiI,WAAa,CACjC,CAAEC,MAAO,EAAGhF,MAAO7C,EAASL,KAAKyH,aAAarB,MAAM,EAAG,IACvD,CAAE8B,MAAO,EAAGhF,MAAO7C,EAASL,KAAKyH,aAAarB,MAAM,EAAG,KACvD,CAAE8B,MAAO,EAAGhF,MAAO7C,EAASL,KAAKyH,aAAarB,MAAM,GAAI,uCAK1D,OACEpI,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACEzB,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAACiG,EAAA,EAAMC,KAAP,KACGrG,KAAK+B,MAAMC,MAAMC,KAAKyH,aACpBrB,MAAM,EAAG,IACT/B,IAAI,SAACnB,EAAOoB,GACX,OACEtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMxF,IAAP,CAAW4F,IAAKD,GACdtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMK,KAAP,KAAatB,EAAMrD,OACnB7B,EAAAC,EAAAC,cAACiG,EAAA,EAAMK,KAAP,KAAatB,EAAM4E,OACnB9J,EAAAC,EAAAC,cAACiG,EAAA,EAAMK,KAAP,KACGF,EAAQ,EACL,4DACAA,EAAQ,GACR,4DACA,2EA5BIvC,iBC4FjBoG,mLAnCX,OACEnK,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACEzB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEN,KAAM,CAAEE,KAAM,SAAUmJ,UAAU,EAAMC,MAAM,GAC9CjK,YAAY,aACZ8B,SA9DZ,SAAuBC,EAAGmI,GAAG,IAAAxK,EAAAC,KACrBsJ,EAAS,IAAIhC,EACbhF,EAAWC,KAAKC,MAAMD,KAAKE,UAAUzC,KAAK+B,MAAMC,QAChD6B,EAAO0G,EAAEzI,MACZqC,QAAQ,wBAAe,KACvBA,QAAQ,OAAQ,KAChBC,cAEGe,EAAQtB,EAAK4B,MAAM,KAAKM,OAAO,SAAAC,GAAI,MAAa,KAATA,IACvCwE,EAAgB,GAChBjB,EAAeD,EAClBE,QAAQrE,GACRY,OAAO,SAAAC,GAAI,MAAa,KAATA,GAAeA,EAAKrB,QAAU,IAE5C8F,EAAI,EACJC,EAAO,EACPC,EAAU,EAEd3K,KAAK+B,MAAMC,MAAMC,KAAKyH,aAAaC,QAAQ,SAAA3D,GAAI,OAAK2E,GAAW3E,EAAK+D,QACpEY,GAAoB3K,KAAK+B,MAAMC,MAAMC,KAAKyH,aAAa/E,OAEvD4E,EAAaI,QAAQ,SAAA3D,GACnB,IAAI4E,EAAI,EASR,GARA7K,EAAKgC,MAAMC,MAAMC,KAAKiI,WAAWP,QAAQ,SAAAkB,GACvCA,EAAU1F,MAAMwE,QAAQ,SAAAG,GAClBA,EAAGhI,QAAUkE,IACf4E,EAAIC,EAAUV,WAKV,IAANS,EAAS,CACX,IAAME,EAAc/K,EAAKgC,MAAMC,MAAMC,KAAKyH,aAAaqB,KAAK,SAAAC,GAC1D,OAAOA,EAAMlJ,QAAUkE,IAGzBwE,EAAcR,KAAKc,EAAYhJ,OAC/B2I,GAAM,EAAIG,EAAKE,EAAYf,MAC3BW,GAAQI,EAAYf,WAEpBW,GAAQC,IAIZrI,EAASL,KAAKgJ,UAAY,CACxBpH,OACA0F,eACA0B,UAAWR,EAAIC,EACfF,iBAGFxK,KAAK+B,MAAMW,YAAYJ,IAWWiB,KAAKvD,SAGjCC,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACEzB,EAAAC,EAAAC,cAAA,8JAC6B,IAC1BH,KAAK+B,MAAMC,MAAMC,KAAKgJ,UAAUA,YAGrChL,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACEzB,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAACiG,EAAA,EAAMC,KAAP,KACGrG,KAAK+B,MAAMC,MAAMC,KAAKgJ,UAAUT,cAAclE,IAC7C,SAACN,EAAMO,GACL,OACEtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMxF,IAAP,CAAW4F,IAAKD,GACdtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMK,KAAP,KAAaT,iBAxBXhC,aCvDlBgB,EAAkB,CACtB,CACEnB,KAAM,wHACN/B,MAAO,GAET,CACE+B,KAAM,0IACN/B,MAAO,GAET,CACE+B,KAAM,wHACN/B,MAAO,IAIX,SAASoJ,EAAUC,GAKjB,IAJA,IACMC,EADUpL,KAAK+B,MAAMC,MAAMC,KAAKC,SACdiC,QAAQ,wBAAe,IAAIC,cAC7CiH,EAAS,GAHKC,EAAA,SAKXxG,GACP,IAAMyG,EAAOH,EAAQ/C,MAAMvD,EAAGA,EAAIqG,GAE9BE,EAAOE,GAAOF,EAAOE,IAAS,EAC7BF,EAAOE,GAAQ,EAEpB,IAAMC,EAAaH,EAAOxB,UAAU,SAAAC,GAAE,OAAIA,EAAGhI,QAAUyJ,KAEnC,IAAhBC,EAAmBH,EAAOG,GAAYzB,OAAS,EAC9CsB,EAAOrB,KAAK,CAAElI,MAAOyJ,EAAMxB,MAAO,KAThCjF,EAAI,EAAGA,EAAIsG,EAAQzG,OAASwG,EAAI,EAAGrG,IAAKwG,EAAxCxG,GAYT,IAAMxC,EAAWC,KAAKC,MAAMD,KAAKE,UAAUzC,KAAK+B,MAAMC,QACtDM,EAASL,KAAKoJ,OAASA,EAAOvE,KAAK,SAAC5G,EAAG0E,GAAJ,OAAUA,EAAEmF,MAAQ7J,EAAE6J,QACzD/J,KAAK+B,MAAMW,YAAYJ,OAuCVmJ,8LAlCXP,EAAU3H,KAAKvD,KAAM,EAArBkL,oCAGO,IAAAnL,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACExB,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACEzB,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CACEC,QAASlB,EACTmB,aAAc,EACdhE,SAAU,SAACC,EAAGC,GACZ6I,EAAU3H,KAAKxD,EAAMsC,EAAMP,MAA3BoJ,OAINjL,EAAAC,EAAAC,cAACsB,EAAA,EAAKC,MAAN,KACEzB,EAAAC,EAAAC,cAACiG,EAAA,EAAD,KACEnG,EAAAC,EAAAC,cAACiG,EAAA,EAAMC,KAAP,KACGrG,KAAK+B,MAAMC,MAAMC,KAAKoJ,OAAO/E,IAAI,SAACnB,EAAOoB,GACxC,OACEtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMxF,IAAP,CAAW4F,IAAKD,GACdtG,EAAAC,EAAAC,cAACiG,EAAA,EAAMK,KAAP,KAAatB,EAAMrD,OACnB7B,EAAAC,EAAAC,cAACiG,EAAA,EAAMK,KAAP,KAAatB,EAAM4E,qBAxBnB/F,sBC8EL0H,cAxGb,SAAAA,EAAYC,GAAQ,IAAA5L,EAAA,OAAAwH,OAAAC,EAAA,EAAAD,CAAAvH,KAAA0L,IAClB3L,EAAAwH,OAAAqE,EAAA,EAAArE,CAAAvH,KAAAuH,OAAAsE,EAAA,EAAAtE,CAAAmE,GAAAI,KAAA9L,KAAM2L,KAEDI,MAAQ,CACX,CACEC,SAAU,mDACVC,OAAQ,kBACNhM,EAAAC,EAAAC,cAAC+L,EAAA,EAAIC,KAAL,KACElM,EAAAC,EAAAC,cAACiM,EAAD,CACEpK,MAAOjC,EAAKgC,MAAMC,MAClBU,YAAa3C,EAAKgC,MAAMW,iBAKhC,CACEsJ,SAAU,6CACVC,OAAQ,kBACNhM,EAAAC,EAAAC,cAAC+L,EAAA,EAAIC,KAAL,KACElM,EAAAC,EAAAC,cAACkM,EAAD,CACErK,MAAOjC,EAAKgC,MAAMC,MAClBU,YAAa3C,EAAKgC,MAAMW,iBAKhC,CACEsJ,SAAU,2GACVC,OAAQ,kBACNhM,EAAAC,EAAAC,cAAC+L,EAAA,EAAIC,KAAL,KACElM,EAAAC,EAAAC,cAACmM,EAAD,CACEtK,MAAOjC,EAAKgC,MAAMC,MAClBU,YAAa3C,EAAKgC,MAAMW,iBAKhC,CACEsJ,SAAU,mDACVC,OAAQ,kBACNhM,EAAAC,EAAAC,cAAC+L,EAAA,EAAIC,KAAL,KACElM,EAAAC,EAAAC,cAACoM,EAAD,CACEvK,MAAOjC,EAAKgC,MAAMC,MAClBU,YAAa3C,EAAKgC,MAAMW,iBAKhC,CACEsJ,SAAU,qEACVC,OAAQ,kBACNhM,EAAAC,EAAAC,cAAC+L,EAAA,EAAIC,KAAL,KACElM,EAAAC,EAAAC,cAACqM,EAAD,CACExK,MAAOjC,EAAKgC,MAAMC,MAClBU,YAAa3C,EAAKgC,MAAMW,iBAKhC,CACEsJ,SAAU,sHACVC,OAAQ,kBACNhM,EAAAC,EAAAC,cAAC+L,EAAA,EAAIC,KAAL,KACElM,EAAAC,EAAAC,cAACsM,EAAD,CACEzK,MAAOjC,EAAKgC,MAAMC,MAClBU,YAAa3C,EAAKgC,MAAMW,iBAKhC,CACEsJ,SAAU,8IACVC,OAAQ,kBACNhM,EAAAC,EAAAC,cAAC+L,EAAA,EAAIC,KAAL,KACElM,EAAAC,EAAAC,cAACuM,EAAD,CACE1K,MAAOjC,EAAKgC,MAAMC,MAClBU,YAAa3C,EAAKgC,MAAMW,iBAKhC,CACEsJ,SAAU,yCACVC,OAAQ,kBACNhM,EAAAC,EAAAC,cAAC+L,EAAA,EAAIC,KAAL,KACElM,EAAAC,EAAAC,cAACwM,EAAD,CACE3K,MAAOjC,EAAKgC,MAAMC,MAClBU,YAAa3C,EAAKgC,MAAMW,kBAvFhB3C,wEA+FlB,OACEE,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CACEU,KAAM,CAAEC,OAAO,EAAMlM,UAAU,EAAMmM,SAAS,EAAMC,UAAU,GAC9DhB,MAAO/L,KAAK+L,eAnGD/H,aC4BJgJ,cAnCb,SAAAA,IAAc,IAAAjN,EAAA,OAAAwH,OAAAC,EAAA,EAAAD,CAAAvH,KAAAgN,IACZjN,EAAAwH,OAAAqE,EAAA,EAAArE,CAAAvH,KAAAuH,OAAAsE,EAAA,EAAAtE,CAAAyF,GAAAlB,KAAA9L,QAEKgC,MAAQ,CACXC,KAAM,CACJC,SAAU,GACVgC,YAAa,GACbiB,MAAO,GACPoE,aAAc,GACdG,aAAc,GACdQ,WAAY,GACZe,UAAW,CACTpH,KAAM,GACN0F,aAAc,GACd0B,UAAW,GACXT,cAAe,IAEjBa,OAAQ,KAjBAtL,2EAsBFuC,GACVtC,KAAKiN,SAAS3K,oCAId,OACErC,EAAAC,EAAAC,cAAA,OAAK+M,UAAU,OACbjN,EAAAC,EAAAC,cAACgN,EAAD,CAAMnL,MAAOhC,KAAKgC,MAAOU,YAAa1C,KAAK0C,YAAYa,KAAKvD,gBA9BlDgE,aCAlBoJ,IAASnB,OAAOhM,EAAAC,EAAAC,cAACkN,EAAD,MAASxK,SAASC,eAAe","file":"static/js/main.76bcd549.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  TextArea,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Icon,\r\n  Header,\r\n  Divider,\r\n  Input\r\n} from \"semantic-ui-react\";\r\n\r\nclass Loader extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <Segment placeholder>\r\n          <Grid columns={2} stackable textAlign=\"center\">\r\n            <Divider vertical>Or</Divider>\r\n            <Grid.Row verticalAlign=\"middle\">\r\n              <Grid.Column>\r\n                <Header icon>\r\n                  <Icon name=\"paste\" />С буфера обмена\r\n                </Header>\r\n                <Button id=\"upload_clipboard\" secondary>\r\n                  {\" \"}\r\n                  Вставить{\" \"}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Header icon>\r\n                  <Icon name=\"file\" />С файла\r\n                </Header>\r\n                <div>\r\n                  <Input\r\n                    id=\"upload_textfile\"\r\n                    type=\"file\"\r\n                    encType=\"multipart/form-data\"\r\n                  />\r\n                </div>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Segment>\r\n        <Form>\r\n          <Form.Field\r\n            id=\"fullText\"\r\n            control={TextArea}\r\n            label=\"Исходные данные\"\r\n            value={this.props.state.data.fullText}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.fullText = event.value;\r\n              this.props.changeState(newState);\r\n            }}\r\n            autoHeight\r\n          />\r\n        </Form>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.getElementById(\"upload_textfile\").addEventListener(\r\n      \"change\",\r\n      event => {\r\n        const files = event.target.files;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = function(event) {\r\n          const newState = JSON.parse(JSON.stringify(this.props.state));\r\n          newState.data.fullText = event.target.result;\r\n          this.props.changeState(newState);\r\n        }.bind(this);\r\n        reader.readAsText(file);\r\n      },\r\n      false\r\n    );\r\n\r\n    document.getElementById(\"upload_clipboard\").addEventListener(\r\n      \"click\",\r\n      () => {\r\n        navigator.clipboard\r\n          .readText()\r\n          .then(text => {\r\n            const newState = JSON.parse(JSON.stringify(this.props.state));\r\n            newState.data.fullText = text;\r\n            this.props.changeState(newState);\r\n          })\r\n          .catch(err => {\r\n            const newState = JSON.parse(JSON.stringify(this.props.state));\r\n            newState.data.fullText = \"\";\r\n            this.props.changeState(newState);\r\n          });\r\n      },\r\n      false\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport { Form, TextArea } from \"semantic-ui-react\";\r\n\r\nfunction clearText(text) {\r\n  return text\r\n    .replace(/[^A-ZА-Я]/gi, \" \")\r\n    .replace(/\\s+/g, \" \")\r\n    .toLowerCase();\r\n}\r\n\r\nclass Cleaner extends Component {\r\n  componentWillMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.clearedText = clearText(newState.data.fullText);\r\n    this.props.changeState(newState);\r\n  }\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Очищенный текст\"\r\n          value={this.props.state.data.clearedText}\r\n          autoHeight\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cleaner;\r\n","Array.prototype.customeSort = function (match) {\r\n    return QuickSort(this, match);\r\n};\r\n\r\nfunction QuickSort(A, match) {\r\n    if (A.length === 0) return [];\r\n    const a = [];\r\n    const b = [];\r\n    const p = A[0];\r\n\r\n    for (var i = 1; i < A.length; i++) {\r\n        if (match(A[i], p)) a[a.length] = A[i];\r\n        else b[b.length] = A[i];\r\n    }\r\n    return QuickSort(a, match).concat(p, QuickSort(b, match));\r\n}\r\n\r\nexport const dropdownOptions = [{\r\n        text: \"По умолчанию\",\r\n        value: 'defaultSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по возростанию с начала\",\r\n        value: 'ascendingFromBeginningSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по убыванию с начала\",\r\n        value: 'descendingFromBeginningSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по возростанию с конца\",\r\n        value: 'asceningFromEndingSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по убыванию с конца\",\r\n        value: 'descendingFromEndingSort'\r\n    }\r\n];\r\n\r\nexport const sorting = {\r\n    \"defaultSort\": defaultSort,\r\n    \"ascendingFromBeginningSort\": ascendingFromBeginningSort,\r\n    \"descendingFromBeginningSort\": descendingFromBeginningSort,\r\n    \"asceningFromEndingSort\": asceningFromEndingSort,\r\n    \"descendingFromEndingSort\": descendingFromEndingSort\r\n}\r\n\r\nexport function defaultSort(words) {\r\n\r\n    return words\r\n}\r\n\r\nexport function ascendingFromBeginningSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        return a.localeCompare(b) < 0 ? true : false;\r\n    })\r\n}\r\n\r\nexport function descendingFromBeginningSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        return b.localeCompare(a) < 0 ? true : false;\r\n    })\r\n}\r\n\r\nexport function asceningFromEndingSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        const rev_a = a\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        const rev_b = b\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        return rev_a.localeCompare(rev_b) < 0 ? true : false;\r\n    })\r\n}\r\n\r\nexport function descendingFromEndingSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        const rev_a = a\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        const rev_b = b\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        return rev_b.localeCompare(rev_a) < 0 ? true : false;\r\n    })\r\n}","import React, { Component } from \"react\";\r\nimport { Table, Form, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { dropdownOptions, sorting } from \"../../libs/sort\";\r\n\r\nclass Spliter extends Component {\r\n  componentDidMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.words = this.props.state.data.clearedText\r\n      .split(\" \")\r\n      .filter(word => word !== \"\" && word.length >= 3);\r\n    this.props.changeState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Dropdown\r\n            options={dropdownOptions}\r\n            defaultValue={dropdownOptions[0].value}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.words = sorting[event.value](newState.data.words);\r\n\r\n              this.props.changeState(newState);\r\n            }}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.words.map((word, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{word}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spliter;\r\n","export const PERFECTIVE_GERUND = ['в', 'вши', 'вшись',\r\n    'ив', 'ивши', 'ившись', 'ыв', 'ывши', 'ывшись'\r\n]\r\nexport const ADJECTIVE = [\r\n    \"ее\",\r\n    \"ие\",\r\n    \"ые\",\r\n    \"ое\",\r\n    \"ими\",\r\n    \"ыми\",\r\n    \"ей\",\r\n    \"ий\",\r\n    \"ый\",\r\n    \"ой\",\r\n    \"ем\",\r\n    \"им\",\r\n    \"ым\",\r\n    \"ом\",\r\n    \"его\",\r\n    \"ого\",\r\n    \"ему\",\r\n    \"ому\",\r\n    \"их\",\r\n    \"ых\",\r\n    \"ую\",\r\n    \"юю\",\r\n    \"ая\",\r\n    \"яя\",\r\n    \"ою\",\r\n    \"ею\"\r\n];\r\n\r\nexport const PARTICIPLE = [\r\n    \"ем\", \"нн\", \"вш\", \"ющ\", \"щ\",\r\n    \"ивш\", \"ывш\", \"ующ\"\r\n];\r\n\r\nexport const REFLEXIVE = ['ся', 'сь'];\r\n\r\nexport const VERB = [\r\n    'ла', 'на', 'ете', 'йте', 'ли', 'й', 'л', 'ем', 'н', 'ло', 'но', 'ет', 'ют', 'ны', 'ть', 'ешь', 'нно',\r\n    'ила', 'ыла', 'ена', 'ейте', 'уйте', 'ите', 'или', 'ыли', 'ей', 'уй', 'ил', 'ыл', 'им', 'ым', 'ен', 'ило', 'ыло', 'ено', 'ят', 'ует', 'уют', 'ит', 'ыт', 'ены', 'ить', 'ыть', 'ишь', 'ую', 'ю'\r\n]\r\n\r\nexport const NOUN = [\r\n    \"а\",\r\n    \"ев\",\r\n    \"ов\",\r\n    \"ие\",\r\n    \"ье\",\r\n    \"е\",\r\n    \"иями\",\r\n    \"ями\",\r\n    \"ами\",\r\n    \"еи\",\r\n    \"ии\",\r\n    \"и\",\r\n    \"ией\",\r\n    \"ей\",\r\n    \"ой\",\r\n    \"ий\",\r\n    \"й\",\r\n    \"иям\",\r\n    \"ям\",\r\n    \"ием\",\r\n    \"ем\",\r\n    \"ам\",\r\n    \"ом\",\r\n    \"о\",\r\n    \"у\",\r\n    \"ах\",\r\n    \"иях\",\r\n    \"ях\",\r\n    \"ы\",\r\n    \"ь\",\r\n    \"ию\",\r\n    \"ью\",\r\n    \"ю\",\r\n    \"ия\",\r\n    \"ья\",\r\n    \"я\"\r\n];\r\n\r\nexport const SUPERLATIVE = [\"ейш\", \"ейше\"];\r\nexport const DERIVATIONAL = [\"ост\", \"ость\"];\r\n\r\nexport const VOWELS = ['а', 'е', 'ё', 'и', 'о', 'у', 'ы', 'э', 'ю', 'я']\r\nexport const CONSONANTS = ['б', 'в', 'г', 'д', 'ж', 'з', 'й', 'к', 'л', 'м', 'н', 'п', 'р', 'с', 'т', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ь']","import * as PORTER_CONST from \"./const\";\r\n\r\nconst sortByLength = (a, b) => a.length >= b.length ? -1 : 1;\r\nconst perfective_gerund = PORTER_CONST.PERFECTIVE_GERUND.sort(sortByLength);\r\nconst reflexive = PORTER_CONST.REFLEXIVE.sort(sortByLength);\r\nconst adjective = PORTER_CONST.ADJECTIVE.sort(sortByLength);\r\nconst participle = PORTER_CONST.PARTICIPLE.sort(sortByLength);\r\nconst verb = PORTER_CONST.VERB.sort(sortByLength);\r\nconst noun = PORTER_CONST.NOUN.sort(sortByLength);\r\nconst derivational = PORTER_CONST.DERIVATIONAL.sort(sortByLength);\r\nconst superlative = PORTER_CONST.SUPERLATIVE.sort(sortByLength);\r\n\r\nexport class Porter {\r\n\r\n    stemAll(words) {\r\n        return words.map(word => this.stem(word));\r\n    }\r\n\r\n    stem(word) {\r\n\r\n        const wordParts = this.findWordParts(word);\r\n        console.log(JSON.parse(JSON.stringify(wordParts)))\r\n        const stemmedWord = this.stemByWordParts(wordParts).word;\r\n        console.log(this.stemByWordParts(wordParts))\r\n        return stemmedWord;\r\n    }\r\n\r\n    stemByWordParts(data) {\r\n\r\n        let haveReflexive = false;\r\n        let haveAdjective = false;\r\n\r\n        this.removeEnding(data, perfective_gerund);\r\n\r\n        haveReflexive = this.removeEnding(data, reflexive);\r\n        haveAdjective = this.removeEnding(data, adjective);\r\n\r\n        this.removeEnding(data, participle);\r\n\r\n        if (haveAdjective)\r\n            return data;\r\n\r\n        this.removeEnding(data, verb);\r\n\r\n        if (!haveReflexive)\r\n            this.removeEnding(data, noun);\r\n\r\n        // Step 2\r\n\r\n        if (data.RV.slice(data.RV.length - 1) === 'и') {\r\n            data.RV = data.RV.slice(0, data.RV.length - 1);\r\n            data.word = data.word.slice(0, data.word.length - 1);\r\n        }\r\n\r\n        // Step 3\r\n\r\n        if (data.R2) {\r\n            for (let i = 0; i <= derivational.length - 1; i++) {\r\n                const ending = derivational[i];\r\n\r\n                if (data.R2.slice(data.R2.length - ending.length) === ending) {\r\n                    data.RV = data.RV.slice(0, data.RV.length - ending.length);\r\n                    data.word = data.word.slice(0, data.word.length - ending.length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Step 4\r\n        this.removeEnding(data, superlative.concat(['н', 'ь']))\r\n\r\n        return data;\r\n    }\r\n\r\n    findWordParts(word) {\r\n\r\n        const RVInd = Math.min(...word.split('').map((symbol, index) => {\r\n            if ((PORTER_CONST.VOWELS.includes(symbol)) && (PORTER_CONST.CONSONANTS.includes(word[index - 1])))\r\n                return index\r\n            else return word.length\r\n        }));\r\n\r\n        const RV = word.substr(RVInd + 1, word.length);\r\n\r\n        const R1Ind = Math.min(...RV.split('').map((symbol, index) => {\r\n            if ((PORTER_CONST.CONSONANTS.includes(symbol)) && (PORTER_CONST.VOWELS.includes(RV[index - 1])))\r\n                return index\r\n            else return RV.length\r\n        }));\r\n\r\n        const R1 = RV.substr(R1Ind + 1, RV.length);\r\n\r\n        const R2Ind = Math.min(...R1.split('').map((symbol, index) => {\r\n            if ((PORTER_CONST.CONSONANTS.includes(symbol)) && (PORTER_CONST.VOWELS.includes(R1[index - 1])))\r\n                return index\r\n            else return R1.length\r\n        }));\r\n\r\n        const R2 = R1.substr(R2Ind + 1, R1.length);\r\n\r\n        return {\r\n            word,\r\n            RV,\r\n            R1,\r\n            R2\r\n        }\r\n    }\r\n\r\n    removeEnding(data, endings) {\r\n        for (let i = 0; i <= endings.length - 1; i++) {\r\n            const ending = endings[i];\r\n\r\n            if (data.RV.slice(data.RV.length - ending.length) === ending) {\r\n                data.RV = data.RV.slice(0, data.RV.length - ending.length);\r\n                data.word = data.word.slice(0, data.word.length - ending.length);\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Porter } from \"../../libs/porter\";\r\nimport { Table, Form, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { dropdownOptions, sorting } from \"../../libs/sort\";\r\n\r\nclass Stemming extends Component {\r\n  componentWillMount() {\r\n    const porter = new Porter();\r\n\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.stemmedWords = porter.stemAll(this.props.state.data.words).filter(word => word !== \"\");\r\n    this.props.changeState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Dropdown\r\n            options={dropdownOptions}\r\n            defaultValue={dropdownOptions[0].value}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.stemmedWords = sorting[event.value](\r\n                newState.data.stemmedWords\r\n              );\r\n\r\n              this.props.changeState(newState);\r\n            }}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.stemmedWords.map((word, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{word}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stemming;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Form } from \"semantic-ui-react\";\r\n\r\nclass Grouping extends Component {\r\n  componentWillMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    const groupedWords = [];\r\n    this.props.state.data.stemmedWords.forEach(word => {\r\n      const existingWordId = groupedWords.findIndex(el => el.value === word);\r\n      if (existingWordId !== -1) groupedWords[existingWordId].count += 1;\r\n      else\r\n        groupedWords.push({\r\n          value: word,\r\n          count: 1\r\n        });\r\n    });\r\n    newState.data.groupedWords = groupedWords.sort((a, b) => b.count - a.count);\r\n    this.props.changeState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.groupedWords.map((words, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{words.value}</Table.Cell>\r\n                    <Table.Cell>{words.count}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grouping;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Form } from \"semantic-ui-react\";\r\n\r\nclass WeightCoefficient extends Component {\r\n  componentWillMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    this.props.state.data.weightCoef = [\r\n      { width: 1, words: newState.data.groupedWords.slice(0, 4) },\r\n      { width: 2, words: newState.data.groupedWords.slice(4, 10) },\r\n      { width: 3, words: newState.data.groupedWords.slice(10, 20) }\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.groupedWords\r\n                .slice(0, 20)\r\n                .map((words, index) => {\r\n                  return (\r\n                    <Table.Row key={index}>\r\n                      <Table.Cell>{words.value}</Table.Cell>\r\n                      <Table.Cell>{words.count}</Table.Cell>\r\n                      <Table.Cell>\r\n                        {index < 4\r\n                          ? \"1  категория\"\r\n                          : index < 10\r\n                          ? \"2  категория\"\r\n                          : \"3  категория\"}\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  );\r\n                })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeightCoefficient;\r\n","import React, { Component } from \"react\";\r\nimport { Porter } from \"../../libs/porter\";\r\nimport { Table, Form, Input } from \"semantic-ui-react\";\r\n\r\nfunction calcRelevance(_, e) {\r\n  const porter = new Porter();\r\n  const newState = JSON.parse(JSON.stringify(this.props.state));\r\n  const text = e.value\r\n    .replace(/[^A-ZА-Я]/gi, \" \")\r\n    .replace(/\\s+/g, \" \")\r\n    .toLowerCase();\r\n\r\n  const words = text.split(\" \").filter(word => word !== \"\");\r\n  const matchingWords = [];\r\n  const stemmedWords = porter\r\n    .stemAll(words)\r\n    .filter(word => word !== \"\" && word.length >= 3);\r\n\r\n  let R = 0;\r\n  let maxR = 0;\r\n  let avgCoef = 0;\r\n\r\n  this.props.state.data.groupedWords.forEach(word => (avgCoef += word.count));\r\n  avgCoef = avgCoef / this.props.state.data.groupedWords.length;\r\n\r\n  stemmedWords.forEach(word => {\r\n    let k = 0;\r\n    this.props.state.data.weightCoef.forEach(coefGroup => {\r\n      coefGroup.words.forEach(el => {\r\n        if (el.value === word) {\r\n          k = coefGroup.width;\r\n        }\r\n      });\r\n    });\r\n\r\n    if (k !== 0) {\r\n      const groupedWord = this.props.state.data.groupedWords.find(gWord => {\r\n        return gWord.value === word;\r\n      });\r\n\r\n      matchingWords.push(groupedWord.value);\r\n      R += (1 / k) * groupedWord.count;\r\n      maxR += groupedWord.count;\r\n    } else {\r\n      maxR += avgCoef;\r\n    }\r\n  });\r\n\r\n  newState.data.relevance = {\r\n    text,\r\n    stemmedWords,\r\n    relevance: R / maxR,\r\n    matchingWords\r\n  };\r\n\r\n  this.props.changeState(newState);\r\n}\r\n\r\nclass Relevance extends Component {\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Input\r\n            icon={{ name: \"search\", circular: true, link: true }}\r\n            placeholder=\"Search ...\"\r\n            onChange={calcRelevance.bind(this)}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <b>\r\n            Коэффициент релевантности:{\" \"}\r\n            {this.props.state.data.relevance.relevance}\r\n          </b>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.relevance.matchingWords.map(\r\n                (word, index) => {\r\n                  return (\r\n                    <Table.Row key={index}>\r\n                      <Table.Cell>{word}</Table.Cell>\r\n                    </Table.Row>\r\n                  );\r\n                }\r\n              )}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Relevance;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Form, Dropdown } from \"semantic-ui-react\";\r\n\r\nconst dropdownOptions = [\r\n  {\r\n    text: \"Трехбуквенная N-грамма\",\r\n    value: 3\r\n  },\r\n  {\r\n    text: \"Четырехбуквенная N-грамма\",\r\n    value: 4\r\n  },\r\n  {\r\n    text: \"Пятибуквенная N-грамма\",\r\n    value: 5\r\n  }\r\n];\r\n\r\nfunction getNGrams(n) {\r\n  const srcText = this.props.state.data.fullText;\r\n  const clrText = srcText.replace(/[^A-ZА-Я]/gi, \"\").toLowerCase();\r\n  const ngrams = [];\r\n\r\n  for (let i = 0; i < clrText.length - n + 1; i++) {\r\n    const gram = clrText.slice(i, i + n);\r\n\r\n    if (ngrams[gram]) ngrams[gram] += 1;\r\n    else ngrams[gram] = 1;\r\n\r\n    const existNgram = ngrams.findIndex(el => el.value === gram);\r\n\r\n    if (existNgram !== -1) ngrams[existNgram].count += 1;\r\n    else ngrams.push({ value: gram, count: 1 });\r\n  }\r\n\r\n  const newState = JSON.parse(JSON.stringify(this.props.state));\r\n  newState.data.ngrams = ngrams.sort((a, b) => b.count - a.count);\r\n  this.props.changeState(newState);\r\n}\r\n\r\nclass NGram extends Component {\r\n  componentDidMount() {\r\n    getNGrams.bind(this, 3)();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Dropdown\r\n            options={dropdownOptions}\r\n            defaultValue={3}\r\n            onChange={(_, event) => {\r\n              getNGrams.bind(this, event.value)();\r\n            }}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.ngrams.map((words, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{words.value}</Table.Cell>\r\n                    <Table.Cell>{words.count}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NGram;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Loader from \"./Loader\";\r\nimport Cleaner from \"./Cleaner\";\r\nimport Spliter from \"./Spliter\";\r\nimport Stemming from \"./Stemming\";\r\nimport Grouping from \"./Grouping\";\r\nimport WeightCoefficient from \"./WeightCoefficient\";\r\nimport Relevance from \"./Relevance\";\r\nimport NGram from \"./NGram\";\r\n\r\nimport { Tab } from \"semantic-ui-react\";\r\n\r\nclass Main extends Component {\r\n  constructor(params) {\r\n    super(params);\r\n\r\n    this.panes = [\r\n      {\r\n        menuItem: \"Загрузка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Loader\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Очистка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Cleaner\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Разделение на слова\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Spliter\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Стемминг\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Stemming\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Группировка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Grouping\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Весовые коэффициенты\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <WeightCoefficient\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Вычисление релевантности\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Relevance\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"N-граммы\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <NGram\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      }\r\n    ];\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab\r\n        menu={{ fluid: true, vertical: true, tabular: true, pointing: true }}\r\n        panes={this.panes}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./App.css\";\r\nimport Main from \"./Main\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      data: {\r\n        fullText: \"\",\r\n        clearedText: \"\",\r\n        words: [],\r\n        stemmedWords: [],\r\n        groupedWords: [],\r\n        weightCoef: [],\r\n        relevance: {\r\n          text: \"\",\r\n          stemmedWords: [],\r\n          relevance: \"\",\r\n          matchingWords: []\r\n        },\r\n        ngrams: []\r\n      }\r\n    };\r\n  }\r\n\r\n  changeState(newState) {\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Main state={this.state} changeState={this.changeState.bind(this)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}