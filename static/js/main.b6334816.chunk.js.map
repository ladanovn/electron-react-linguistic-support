{"version":3,"sources":["components/Loader/index.jsx","components/Cleaner/index.jsx","libs/sort/index.js","components/Spliter/index.jsx","libs/porter/const.js","libs/porter/index.js","components/Stemming/index.jsx","components/Grouping/index.jsx","components/WeightCoefficient/index.jsx","components/Relevance/index.jsx","components/Main.jsx","components/App.jsx","index.js"],"names":["Loader","_this","this","react_default","a","createElement","Segment","placeholder","Grid","columns","stackable","textAlign","Divider","vertical","Row","verticalAlign","Column","Header","icon","Icon","name","Button","id","secondary","Input","type","encType","Form","Field","control","TextArea","label","value","props","state","data","fullText","onChange","_","event","newState","JSON","parse","stringify","changeState","autoHeight","_this2","document","getElementById","addEventListener","file","target","files","reader","FileReader","onload","result","bind","readAsText","navigator","clipboard","readText","then","text","catch","err","Component","clearText","stopSymbols","split","map","symbol","includes","join","replace","toLowerCase","Cleaner","clearedText","Object","toConsumableArray","dropdownOptions","sorting","defaultSort","words","ascendingFromBeginningSort","sort","b","localeCompare","descendingFromBeginningSort","asceningFromEndingSort","rev_a","reverse","rev_b","descendingFromEndingSort","Spliter","filter","word","Dropdown","options","defaultValue","Table","Body","index","key","Cell","PERFECTIVE_GERUND","ADJECTIVE","PARTICIPLE","REFLEXIVE","VERB","NOUN","SUPERLATIVE","DERIVATIONAL","VOWELS","CONSONANTS","Porter","classCallCheck","createClass","stem","wordParts","findWordParts","stemByWordParts","reversed_word","RV","R2","sortByLength","length","perfective_gerund","PORTER_CONST","reflexive","adjective","participle","verb","noun","derivational","superlative","haveReflexive","haveAdjective","i","ending","reverse_word","slice","assign","extendedSL","concat","first_volwe","Math","max","apply","vowel","indexOf","substr","R1Index","min","consonant","R1","R2Index","Stemming","porter","stemmedWords","stemAll","Grouping","WeightCoefficient","Relevance","Main","params","possibleConstructorReturn","getPrototypeOf","call","panes","menuItem","render","Tab","Pane","components_Loader","components_Cleaner","components_Spliter","components_Stemming","components_Grouping","components_WeightCoefficient","components_Relevance","menu","fluid","tabular","pointing","App","groupedWords","weightCoef","width","setState","className","components_Main","ReactDOM","src_components_App"],"mappings":"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","file":"static/js/main.b6334816.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  TextArea,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Icon,\r\n  Header,\r\n  Divider,\r\n  Input\r\n} from \"semantic-ui-react\";\r\n\r\nclass Loader extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <Segment placeholder>\r\n          <Grid columns={2} stackable textAlign=\"center\">\r\n            <Divider vertical>Or</Divider>\r\n            <Grid.Row verticalAlign=\"middle\">\r\n              <Grid.Column>\r\n                <Header icon>\r\n                  <Icon name=\"paste\" />С буфера обмена\r\n                </Header>\r\n                <Button id=\"upload_clipboard\" secondary>\r\n                  {\" \"}\r\n                  Вставить{\" \"}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Header icon>\r\n                  <Icon name=\"file\" />С файла\r\n                </Header>\r\n                <div>\r\n                  <Input\r\n                    id=\"upload_textfile\"\r\n                    type=\"file\"\r\n                    encType=\"multipart/form-data\"\r\n                  />\r\n                </div>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Segment>\r\n        <Form>\r\n          <Form.Field\r\n            id=\"fullText\"\r\n            control={TextArea}\r\n            label=\"Исходные данные\"\r\n            value={this.props.state.data.fullText}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.fullText = event.value;\r\n              this.props.changeState(newState);\r\n            }}\r\n            autoHeight\r\n          />\r\n        </Form>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.getElementById(\"upload_textfile\").addEventListener(\r\n      \"change\",\r\n      event => {\r\n        const files = event.target.files;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = function(event) {\r\n          const newState = JSON.parse(JSON.stringify(this.props.state));\r\n          newState.data.fullText = event.target.result;\r\n          this.props.changeState(newState);\r\n        }.bind(this);\r\n        reader.readAsText(file);\r\n      },\r\n      false\r\n    );\r\n\r\n    document.getElementById(\"upload_clipboard\").addEventListener(\r\n      \"click\",\r\n      () => {\r\n        navigator.clipboard\r\n          .readText()\r\n          .then(text => {\r\n            const newState = JSON.parse(JSON.stringify(this.props.state));\r\n            newState.data.fullText = text;\r\n            this.props.changeState(newState);\r\n          })\r\n          .catch(err => {\r\n            const newState = JSON.parse(JSON.stringify(this.props.state));\r\n            newState.data.fullText = \"\";\r\n            this.props.changeState(newState);\r\n          });\r\n      },\r\n      false\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport { Form, TextArea, Input } from \"semantic-ui-react\";\r\n\r\nfunction clearText(text, stopSymbols) {\r\n  return text\r\n    .split(\"\")\r\n    .map(symbol => {\r\n      if (stopSymbols.includes(symbol)) return \" \";\r\n      else return symbol;\r\n    })\r\n    .join(\"\")\r\n    .replace(/\\s+/g, \" \")\r\n    .toLowerCase();\r\n}\r\n\r\nclass Cleaner extends Component {\r\n  componentWillMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.clearedText = clearText(\r\n      newState.data.fullText,\r\n      newState.data.stopSymbols\r\n    );\r\n    this.props.changeState(newState);\r\n  }\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field\r\n          control={Input}\r\n          label=\"Стоп символы\"\r\n          value={this.props.state.data.stopSymbols}\r\n          onChange={(_, event) => {\r\n            const newState = JSON.parse(JSON.stringify(this.props.state));\r\n            newState.data.stopSymbols = event.value;\r\n            newState.data.clearedText = clearText(newState.data.fullText, [\r\n              ...event.value\r\n            ]);\r\n            this.props.changeState(newState);\r\n          }}\r\n        />\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Очищенный текст\"\r\n          value={this.props.state.data.clearedText}\r\n          autoHeight\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cleaner;\r\n","export const dropdownOptions = [{\r\n        text: \"По умолчанию\",\r\n        value: 'defaultSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по возростанию с начала\",\r\n        value: 'ascendingFromBeginningSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по убыванию с начала\",\r\n        value: 'descendingFromBeginningSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по возростанию с конца\",\r\n        value: 'asceningFromEndingSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по убыванию с конца\",\r\n        value: 'descendingFromEndingSort'\r\n    }\r\n];\r\n\r\nexport const sorting = {\r\n    \"defaultSort\": defaultSort,\r\n    \"ascendingFromBeginningSort\": ascendingFromBeginningSort,\r\n    \"descendingFromBeginningSort\": descendingFromBeginningSort,\r\n    \"asceningFromEndingSort\": asceningFromEndingSort,\r\n    \"descendingFromEndingSort\": descendingFromEndingSort\r\n}\r\n\r\nexport function defaultSort(words) {\r\n\r\n    return words\r\n}\r\n\r\nexport function ascendingFromBeginningSort(words) {\r\n\r\n    return words.sort((a, b) => {\r\n        return a.localeCompare(b);\r\n    })\r\n}\r\n\r\nexport function descendingFromBeginningSort(words) {\r\n\r\n    return words.sort((a, b) => {\r\n        return b.localeCompare(a);\r\n    })\r\n}\r\n\r\nexport function asceningFromEndingSort(words) {\r\n\r\n    return words.sort((a, b) => {\r\n        const rev_a = a\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        const rev_b = b\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        return rev_a.localeCompare(rev_b);\r\n    })\r\n}\r\n\r\nexport function descendingFromEndingSort(words) {\r\n\r\n    return words.sort((a, b) => {\r\n        const rev_a = a\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        const rev_b = b\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        return rev_b.localeCompare(rev_a);\r\n    })\r\n}","import React, { Component } from \"react\";\r\nimport { Table, Form, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { dropdownOptions, sorting } from \"../../libs/sort\";\r\n\r\nclass Spliter extends Component {\r\n  componentDidMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.words = this.props.state.data.clearedText\r\n      .split(\" \")\r\n      .filter(word => word !== \"\");\r\n    this.props.changeState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Dropdown\r\n            options={dropdownOptions}\r\n            defaultValue={dropdownOptions[0].value}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.words = sorting[event.value](newState.data.words);\r\n\r\n              this.props.changeState(newState);\r\n            }}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.words.map((word, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{word}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spliter;\r\n","export const PERFECTIVE_GERUND = ['в', 'вши', 'вшись',\r\n    'ив', 'ивши', 'ившись', 'ыв', 'ывши', 'ывшись'\r\n]\r\nexport const ADJECTIVE = [\r\n    \"ее\",\r\n    \"ие\",\r\n    \"ые\",\r\n    \"ое\",\r\n    \"ими\",\r\n    \"ыми\",\r\n    \"ей\",\r\n    \"ий\",\r\n    \"ый\",\r\n    \"ой\",\r\n    \"ем\",\r\n    \"им\",\r\n    \"ым\",\r\n    \"ом\",\r\n    \"его\",\r\n    \"ого\",\r\n    \"ему\",\r\n    \"ому\",\r\n    \"их\",\r\n    \"ых\",\r\n    \"ую\",\r\n    \"юю\",\r\n    \"ая\",\r\n    \"яя\",\r\n    \"ою\",\r\n    \"ею\"\r\n];\r\n\r\nexport const PARTICIPLE = [\r\n    \"ем\", \"нн\", \"вш\", \"ющ\", \"щ\",\r\n    \"ивш\", \"ывш\", \"ующ\"\r\n];\r\n\r\nexport const REFLEXIVE = ['ся', 'сь'];\r\n\r\nexport const VERB = [\r\n    'ла', 'на', 'ете', 'йте', 'ли', 'й', 'л', 'ем', 'н', 'ло', 'но', 'ет', 'ют', 'ны', 'ть', 'ешь', 'нно',\r\n    'ила', 'ыла', 'ена', 'ейте', 'уйте', 'ите', 'или', 'ыли', 'ей', 'уй', 'ил', 'ыл', 'им', 'ым', 'ен', 'ило', 'ыло', 'ено', 'ят', 'ует', 'уют', 'ит', 'ыт', 'ены', 'ить', 'ыть', 'ишь', 'ую', 'ю'\r\n]\r\n\r\nexport const NOUN = [\r\n    \"а\",\r\n    \"ев\",\r\n    \"ов\",\r\n    \"ие\",\r\n    \"ье\",\r\n    \"е\",\r\n    \"иями\",\r\n    \"ями\",\r\n    \"ами\",\r\n    \"еи\",\r\n    \"ии\",\r\n    \"и\",\r\n    \"ией\",\r\n    \"ей\",\r\n    \"ой\",\r\n    \"ий\",\r\n    \"й\",\r\n    \"иям\",\r\n    \"ям\",\r\n    \"ием\",\r\n    \"ем\",\r\n    \"ам\",\r\n    \"ом\",\r\n    \"о\",\r\n    \"у\",\r\n    \"ах\",\r\n    \"иях\",\r\n    \"ях\",\r\n    \"ы\",\r\n    \"ь\",\r\n    \"ию\",\r\n    \"ью\",\r\n    \"ю\",\r\n    \"ия\",\r\n    \"ья\",\r\n    \"я\"\r\n];\r\n\r\nexport const SUPERLATIVE = [\"ейш\", \"ейше\"];\r\nexport const DERIVATIONAL = [\"ост\", \"ость\"];\r\n\r\nexport const VOWELS = ['а', 'е', 'ё', 'и', 'о', 'у', 'ы', 'э', 'ю', 'я']\r\nexport const CONSONANTS = ['б', 'в', 'г', 'д', 'ж', 'з', 'й', 'к', 'л', 'м', 'н', 'п', 'р', 'с', 'т', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь']","import * as PORTER_CONST from \"./const\";\r\n\r\nexport class Porter {\r\n\r\n    stemAll(words) {\r\n        return words.map(word => this.stem(word));\r\n    }\r\n\r\n    stem(word) {\r\n\r\n        const wordParts = this.findWordParts(word);\r\n        const stemmedWord = this.stemByWordParts(wordParts).word;\r\n\r\n        return stemmedWord\r\n    }\r\n\r\n    stemByWordParts(data) {\r\n\r\n        let reversed_word = data.reversed_word;\r\n        let RV = data.RV;\r\n        let R2 = data.R2;\r\n        const sortByLength = (a, b) => a.length >= b.length ? -1 : 1;\r\n        const perfective_gerund = PORTER_CONST.PERFECTIVE_GERUND.sort(sortByLength);\r\n        const reflexive = PORTER_CONST.REFLEXIVE.sort(sortByLength);\r\n        const adjective = PORTER_CONST.ADJECTIVE.sort(sortByLength);\r\n        const participle = PORTER_CONST.PARTICIPLE.sort(sortByLength);\r\n        const verb = PORTER_CONST.VERB.sort(sortByLength);\r\n        const noun = PORTER_CONST.NOUN.sort(sortByLength);\r\n        const derivational = PORTER_CONST.DERIVATIONAL.sort(sortByLength);\r\n        const superlative = PORTER_CONST.SUPERLATIVE.sort(sortByLength);\r\n\r\n        let haveReflexive = false;\r\n        let haveAdjective = false;\r\n\r\n        for (let i = 0; i <= perfective_gerund.length - 1; i++) {\r\n            let ending = this.reverse_word(perfective_gerund[i])\r\n\r\n            if (reversed_word.slice(0, ending.length) === ending) {\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                return Object.assign({}, data, {\r\n                    reversed_word,\r\n                    word: this.reverse_word(reversed_word)\r\n                });\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i <= reflexive.length - 1; i++) {\r\n            let ending = this.reverse_word(reflexive[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                haveReflexive = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i <= adjective.length - 1; i++) {\r\n            let ending = this.reverse_word(adjective[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                haveAdjective = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i <= participle.length - 1; i++) {\r\n            let ending = this.reverse_word(participle[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (haveAdjective) return Object.assign({}, data, {\r\n            RV,\r\n            reversed_word,\r\n            word: this.reverse_word(reversed_word)\r\n        });\r\n\r\n        for (let i = 0; i <= verb.length - 1; i++) {\r\n            let ending = this.reverse_word(verb[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!haveReflexive) {\r\n            for (let i = 0; i <= noun.length - 1; i++) {\r\n                let ending = this.reverse_word(noun[i])\r\n\r\n                if (reversed_word.slice(0, ending.length) === ending) {\r\n                    RV = RV.replace(ending, \"\")\r\n                    reversed_word = reversed_word.replace(ending, \"\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (reversed_word[0] === 'и') {\r\n            reversed_word = reversed_word.slice(1, reversed_word.length - 1)\r\n        }\r\n\r\n        for (let i = 0; i <= derivational.length - 1; i++) {\r\n            let ending = this.reverse_word(derivational[i])\r\n\r\n            if (R2.slice(0, ending.length) === ending) {\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (R2) {\r\n            for (let i = 0; i <= derivational.length - 1; i++) {\r\n                let ending = this.reverse_word(derivational[i])\r\n\r\n                if (R2.slice(0, ending.length) === ending) {\r\n                    reversed_word = reversed_word.replace(ending, \"\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const extendedSL = superlative.concat(['н', 'ь'])\r\n        for (let i = 0; i <= extendedSL.length - 1; i++) {\r\n            let ending = this.reverse_word(extendedSL[i])\r\n\r\n            if (R2.slice(0, ending.length) === ending) {\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        return Object.assign({}, data, {\r\n            RV,\r\n            reversed_word,\r\n            word: this.reverse_word(reversed_word)\r\n        });\r\n\r\n    }\r\n\r\n    findWordParts(word) {\r\n\r\n        let reversed_word = this.reverse_word(word);\r\n        const first_volwe = Math.max(...PORTER_CONST.VOWELS.map((vowel) => {\r\n            if (reversed_word.indexOf(vowel) !== -1) return reversed_word.indexOf(vowel);\r\n            return 0\r\n        }));\r\n\r\n        const RV = reversed_word.substr(0, first_volwe);\r\n        const R1Index = Math.min(...PORTER_CONST.CONSONANTS.map((consonant) => {\r\n            if (RV.indexOf(consonant) !== -1) return reversed_word.indexOf(consonant);\r\n            return first_volwe;\r\n        }));\r\n\r\n        const R1 = reversed_word.substr(R1Index, first_volwe - 1);\r\n        const R2Index = Math.max(...PORTER_CONST.VOWELS.map((vowel) => {\r\n            if ((RV.indexOf(vowel) !== -1) &&\r\n                (PORTER_CONST.CONSONANTS.includes(RV[RV.indexOf(vowel) + 1]))) return reversed_word.indexOf(vowel) + 1;\r\n            return R1Index;\r\n        }));\r\n\r\n        const R2 = reversed_word.substr(R1Index, R2Index);\r\n\r\n        return {\r\n            word,\r\n            reversed_word,\r\n            RV,\r\n            R1,\r\n            R2\r\n        }\r\n    }\r\n\r\n    reverse_word(word) {\r\n        return word.split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Porter } from \"../../libs/porter\";\r\nimport { Table, Form, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { dropdownOptions, sorting } from \"../../libs/sort\";\r\n\r\nclass Stemming extends Component {\r\n  componentWillMount() {\r\n    const porter = new Porter();\r\n\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.stemmedWords = porter.stemAll(this.props.state.data.words);\r\n    this.props.changeState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Dropdown\r\n            options={dropdownOptions}\r\n            defaultValue={dropdownOptions[0].value}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.stemmedWords = sorting[event.value](\r\n                newState.data.stemmedWords\r\n              );\r\n\r\n              this.props.changeState(newState);\r\n            }}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.stemmedWords.map((word, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{word}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stemming;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Grouping extends Component {\r\n  render() {\r\n    return <section>Grouping</section>;\r\n  }\r\n}\r\n\r\nexport default Grouping;\r\n","import React, { Component } from \"react\";\r\n\r\nclass WeightCoefficient extends Component {\r\n  render() {\r\n    return <section>WeightCoefficient</section>;\r\n  }\r\n}\r\n\r\nexport default WeightCoefficient;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Relevance extends Component {\r\n  render() {\r\n    return <section>Relevance</section>;\r\n  }\r\n}\r\n\r\nexport default Relevance;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Loader from \"./Loader\";\r\nimport Cleaner from \"./Cleaner\";\r\nimport Spliter from \"./Spliter\";\r\nimport Stemming from \"./Stemming\";\r\nimport Grouping from \"./Grouping\";\r\nimport WeightCoefficient from \"./WeightCoefficient\";\r\nimport Relevance from \"./Relevance\";\r\n\r\nimport { Tab } from \"semantic-ui-react\";\r\n\r\nclass Main extends Component {\r\n  constructor(params) {\r\n    super(params);\r\n\r\n    this.panes = [\r\n      {\r\n        menuItem: \"Загрузка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Loader\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Очистка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Cleaner\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Разделение на слова\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Spliter\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Стемминг\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Stemming\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Группировка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Grouping\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Весовые коэффициенты\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <WeightCoefficient\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Вычисление релевантности\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Relevance\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      }\r\n    ];\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab\r\n        menu={{ fluid: true, vertical: true, tabular: true, pointing: true }}\r\n        panes={this.panes}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./App.css\";\r\nimport Main from \"./Main\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      data: {\r\n        fullText: \"\",\r\n        stopSymbols: \"0123456789.,<>?!-:;{}[]/'()=&|\",\r\n        clearedText: \"\",\r\n        words: [],\r\n        stemmedWords: [],\r\n        groupedWords: [],\r\n        weightCoef: [\r\n          { width: 1, words: [] },\r\n          { width: 2, words: [] },\r\n          { width: 3, words: [] }\r\n        ]\r\n      }\r\n    };\r\n  }\r\n\r\n  changeState(newState) {\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Main state={this.state} changeState={this.changeState.bind(this)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}