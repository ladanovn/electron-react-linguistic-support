{"version":3,"sources":["components/Loader/index.jsx","components/Cleaner/index.jsx","libs/sort/index.js","components/Spliter/index.jsx","libs/porter/const.js","libs/porter/index.js","components/Stemming/index.jsx","components/Grouping/index.jsx","components/WeightCoefficient/index.jsx","components/Relevance/index.jsx","components/Main.jsx","components/App.jsx","index.js"],"names":["Loader","_this","this","react_default","a","createElement","Segment","placeholder","Grid","columns","stackable","textAlign","Divider","vertical","Row","verticalAlign","Column","Header","icon","Icon","name","Button","id","secondary","Input","type","encType","Form","Field","control","TextArea","label","value","props","state","data","fullText","onChange","_","event","newState","JSON","parse","stringify","changeState","autoHeight","_this2","document","getElementById","addEventListener","file","target","files","reader","FileReader","onload","result","bind","readAsText","navigator","clipboard","readText","then","text","catch","err","Component","Cleaner","clearedText","replace","toLowerCase","Array","prototype","customeSort","match","QuickSort","A","length","b","p","i","concat","dropdownOptions","sorting","defaultSort","words","ascendingFromBeginningSort","localeCompare","descendingFromBeginningSort","asceningFromEndingSort","rev_a","split","reverse","join","rev_b","descendingFromEndingSort","Spliter","filter","word","Dropdown","options","defaultValue","Table","Body","map","index","key","Cell","PERFECTIVE_GERUND","ADJECTIVE","PARTICIPLE","REFLEXIVE","VERB","NOUN","SUPERLATIVE","DERIVATIONAL","VOWELS","CONSONANTS","Porter","Object","classCallCheck","createClass","stem","wordParts","findWordParts","stemByWordParts","reversed_word","RV","R2","sortByLength","perfective_gerund","PORTER_CONST","sort","reflexive","adjective","participle","verb","noun","derivational","superlative","haveReflexive","haveAdjective","ending","reverse_word","slice","assign","extendedSL","first_volwe","Math","max","apply","toConsumableArray","vowel","indexOf","includes","substr","R1Index","min","consonant","R1","R2Index","Stemming","porter","stemmedWords","stemAll","Grouping","groupedWords","forEach","existingWordId","findIndex","el","count","push","WeightCoefficient","weightCoef","width","Relevance","circular","link","e","matchingWords","R","maxR","k","coefGroup","groupedWord","find","gWord","relevance","Main","params","possibleConstructorReturn","getPrototypeOf","call","panes","menuItem","render","Tab","Pane","components_Loader","components_Cleaner","components_Spliter","components_Stemming","components_Grouping","components_WeightCoefficient","components_Relevance","menu","fluid","tabular","pointing","App","setState","className","components_Main","ReactDOM","src_components_App"],"mappings":"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","file":"static/js/main.c69696b6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  TextArea,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Icon,\r\n  Header,\r\n  Divider,\r\n  Input\r\n} from \"semantic-ui-react\";\r\n\r\nclass Loader extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <Segment placeholder>\r\n          <Grid columns={2} stackable textAlign=\"center\">\r\n            <Divider vertical>Or</Divider>\r\n            <Grid.Row verticalAlign=\"middle\">\r\n              <Grid.Column>\r\n                <Header icon>\r\n                  <Icon name=\"paste\" />С буфера обмена\r\n                </Header>\r\n                <Button id=\"upload_clipboard\" secondary>\r\n                  {\" \"}\r\n                  Вставить{\" \"}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Header icon>\r\n                  <Icon name=\"file\" />С файла\r\n                </Header>\r\n                <div>\r\n                  <Input\r\n                    id=\"upload_textfile\"\r\n                    type=\"file\"\r\n                    encType=\"multipart/form-data\"\r\n                  />\r\n                </div>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Segment>\r\n        <Form>\r\n          <Form.Field\r\n            id=\"fullText\"\r\n            control={TextArea}\r\n            label=\"Исходные данные\"\r\n            value={this.props.state.data.fullText}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.fullText = event.value;\r\n              this.props.changeState(newState);\r\n            }}\r\n            autoHeight\r\n          />\r\n        </Form>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.getElementById(\"upload_textfile\").addEventListener(\r\n      \"change\",\r\n      event => {\r\n        const files = event.target.files;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = function(event) {\r\n          const newState = JSON.parse(JSON.stringify(this.props.state));\r\n          newState.data.fullText = event.target.result;\r\n          this.props.changeState(newState);\r\n        }.bind(this);\r\n        reader.readAsText(file);\r\n      },\r\n      false\r\n    );\r\n\r\n    document.getElementById(\"upload_clipboard\").addEventListener(\r\n      \"click\",\r\n      () => {\r\n        navigator.clipboard\r\n          .readText()\r\n          .then(text => {\r\n            const newState = JSON.parse(JSON.stringify(this.props.state));\r\n            newState.data.fullText = text;\r\n            this.props.changeState(newState);\r\n          })\r\n          .catch(err => {\r\n            const newState = JSON.parse(JSON.stringify(this.props.state));\r\n            newState.data.fullText = \"\";\r\n            this.props.changeState(newState);\r\n          });\r\n      },\r\n      false\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport { Form, TextArea } from \"semantic-ui-react\";\r\n\r\nfunction clearText(text) {\r\n  return text\r\n    .replace(/[^A-ZА-Я]/gi, \" \")\r\n    .replace(/\\s+/g, \" \")\r\n    .toLowerCase();\r\n}\r\n\r\nclass Cleaner extends Component {\r\n  componentWillMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.clearedText = clearText(newState.data.fullText);\r\n    this.props.changeState(newState);\r\n  }\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Очищенный текст\"\r\n          value={this.props.state.data.clearedText}\r\n          autoHeight\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cleaner;\r\n","Array.prototype.customeSort = function (match) {\r\n    return QuickSort(this, match);\r\n};\r\n\r\nfunction QuickSort(A, match) {\r\n    if (A.length === 0) return [];\r\n    const a = [];\r\n    const b = [];\r\n    const p = A[0];\r\n\r\n    for (var i = 1; i < A.length; i++) {\r\n        if (match(A[i], p)) a[a.length] = A[i];\r\n        else b[b.length] = A[i];\r\n    }\r\n    return QuickSort(a, match).concat(p, QuickSort(b, match));\r\n}\r\n\r\nexport const dropdownOptions = [{\r\n        text: \"По умолчанию\",\r\n        value: 'defaultSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по возростанию с начала\",\r\n        value: 'ascendingFromBeginningSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по убыванию с начала\",\r\n        value: 'descendingFromBeginningSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по возростанию с конца\",\r\n        value: 'asceningFromEndingSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по убыванию с конца\",\r\n        value: 'descendingFromEndingSort'\r\n    }\r\n];\r\n\r\nexport const sorting = {\r\n    \"defaultSort\": defaultSort,\r\n    \"ascendingFromBeginningSort\": ascendingFromBeginningSort,\r\n    \"descendingFromBeginningSort\": descendingFromBeginningSort,\r\n    \"asceningFromEndingSort\": asceningFromEndingSort,\r\n    \"descendingFromEndingSort\": descendingFromEndingSort\r\n}\r\n\r\nexport function defaultSort(words) {\r\n\r\n    return words\r\n}\r\n\r\nexport function ascendingFromBeginningSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        return a.localeCompare(b) < 0 ? true : false;\r\n    })\r\n}\r\n\r\nexport function descendingFromBeginningSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        return b.localeCompare(a) < 0 ? true : false;\r\n    })\r\n}\r\n\r\nexport function asceningFromEndingSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        const rev_a = a\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        const rev_b = b\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        return rev_a.localeCompare(rev_b) < 0 ? true : false;\r\n    })\r\n}\r\n\r\nexport function descendingFromEndingSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        const rev_a = a\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        const rev_b = b\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        return rev_b.localeCompare(rev_a) < 0 ? true : false;\r\n    })\r\n}","import React, { Component } from \"react\";\r\nimport { Table, Form, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { dropdownOptions, sorting } from \"../../libs/sort\";\r\n\r\nclass Spliter extends Component {\r\n  componentDidMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.words = this.props.state.data.clearedText\r\n      .split(\" \")\r\n      .filter(word => word !== \"\" && word.length >= 3);\r\n    this.props.changeState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Dropdown\r\n            options={dropdownOptions}\r\n            defaultValue={dropdownOptions[0].value}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.words = sorting[event.value](newState.data.words);\r\n\r\n              this.props.changeState(newState);\r\n            }}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.words.map((word, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{word}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spliter;\r\n","export const PERFECTIVE_GERUND = ['в', 'вши', 'вшись',\r\n    'ив', 'ивши', 'ившись', 'ыв', 'ывши', 'ывшись'\r\n]\r\nexport const ADJECTIVE = [\r\n    \"ее\",\r\n    \"ие\",\r\n    \"ые\",\r\n    \"ое\",\r\n    \"ими\",\r\n    \"ыми\",\r\n    \"ей\",\r\n    \"ий\",\r\n    \"ый\",\r\n    \"ой\",\r\n    \"ем\",\r\n    \"им\",\r\n    \"ым\",\r\n    \"ом\",\r\n    \"его\",\r\n    \"ого\",\r\n    \"ему\",\r\n    \"ому\",\r\n    \"их\",\r\n    \"ых\",\r\n    \"ую\",\r\n    \"юю\",\r\n    \"ая\",\r\n    \"яя\",\r\n    \"ою\",\r\n    \"ею\"\r\n];\r\n\r\nexport const PARTICIPLE = [\r\n    \"ем\", \"нн\", \"вш\", \"ющ\", \"щ\",\r\n    \"ивш\", \"ывш\", \"ующ\"\r\n];\r\n\r\nexport const REFLEXIVE = ['ся', 'сь'];\r\n\r\nexport const VERB = [\r\n    'ла', 'на', 'ете', 'йте', 'ли', 'й', 'л', 'ем', 'н', 'ло', 'но', 'ет', 'ют', 'ны', 'ть', 'ешь', 'нно',\r\n    'ила', 'ыла', 'ена', 'ейте', 'уйте', 'ите', 'или', 'ыли', 'ей', 'уй', 'ил', 'ыл', 'им', 'ым', 'ен', 'ило', 'ыло', 'ено', 'ят', 'ует', 'уют', 'ит', 'ыт', 'ены', 'ить', 'ыть', 'ишь', 'ую', 'ю'\r\n]\r\n\r\nexport const NOUN = [\r\n    \"а\",\r\n    \"ев\",\r\n    \"ов\",\r\n    \"ие\",\r\n    \"ье\",\r\n    \"е\",\r\n    \"иями\",\r\n    \"ями\",\r\n    \"ами\",\r\n    \"еи\",\r\n    \"ии\",\r\n    \"и\",\r\n    \"ией\",\r\n    \"ей\",\r\n    \"ой\",\r\n    \"ий\",\r\n    \"й\",\r\n    \"иям\",\r\n    \"ям\",\r\n    \"ием\",\r\n    \"ем\",\r\n    \"ам\",\r\n    \"ом\",\r\n    \"о\",\r\n    \"у\",\r\n    \"ах\",\r\n    \"иях\",\r\n    \"ях\",\r\n    \"ы\",\r\n    \"ь\",\r\n    \"ию\",\r\n    \"ью\",\r\n    \"ю\",\r\n    \"ия\",\r\n    \"ья\",\r\n    \"я\"\r\n];\r\n\r\nexport const SUPERLATIVE = [\"ейш\", \"ейше\"];\r\nexport const DERIVATIONAL = [\"ост\", \"ость\"];\r\n\r\nexport const VOWELS = ['а', 'е', 'ё', 'и', 'о', 'у', 'ы', 'э', 'ю', 'я']\r\nexport const CONSONANTS = ['б', 'в', 'г', 'д', 'ж', 'з', 'й', 'к', 'л', 'м', 'н', 'п', 'р', 'с', 'т', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь']","import * as PORTER_CONST from \"./const\";\r\n\r\nexport class Porter {\r\n\r\n    stemAll(words) {\r\n        return words.map(word => this.stem(word));\r\n    }\r\n\r\n    stem(word) {\r\n\r\n        const wordParts = this.findWordParts(word);\r\n        const stemmedWord = this.stemByWordParts(wordParts).word;\r\n\r\n        return stemmedWord\r\n    }\r\n\r\n    stemByWordParts(data) {\r\n\r\n        let reversed_word = data.reversed_word;\r\n        let RV = data.RV;\r\n        let R2 = data.R2;\r\n        const sortByLength = (a, b) => a.length >= b.length ? -1 : 1;\r\n        const perfective_gerund = PORTER_CONST.PERFECTIVE_GERUND.sort(sortByLength);\r\n        const reflexive = PORTER_CONST.REFLEXIVE.sort(sortByLength);\r\n        const adjective = PORTER_CONST.ADJECTIVE.sort(sortByLength);\r\n        const participle = PORTER_CONST.PARTICIPLE.sort(sortByLength);\r\n        const verb = PORTER_CONST.VERB.sort(sortByLength);\r\n        const noun = PORTER_CONST.NOUN.sort(sortByLength);\r\n        const derivational = PORTER_CONST.DERIVATIONAL.sort(sortByLength);\r\n        const superlative = PORTER_CONST.SUPERLATIVE.sort(sortByLength);\r\n\r\n        let haveReflexive = false;\r\n        let haveAdjective = false;\r\n\r\n        for (let i = 0; i <= perfective_gerund.length - 1; i++) {\r\n            let ending = this.reverse_word(perfective_gerund[i])\r\n\r\n            if (reversed_word.slice(0, ending.length) === ending) {\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                return Object.assign({}, data, {\r\n                    reversed_word,\r\n                    word: this.reverse_word(reversed_word)\r\n                });\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i <= reflexive.length - 1; i++) {\r\n            let ending = this.reverse_word(reflexive[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                haveReflexive = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i <= adjective.length - 1; i++) {\r\n            let ending = this.reverse_word(adjective[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                haveAdjective = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i <= participle.length - 1; i++) {\r\n            let ending = this.reverse_word(participle[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (haveAdjective) return Object.assign({}, data, {\r\n            RV,\r\n            reversed_word,\r\n            word: this.reverse_word(reversed_word)\r\n        });\r\n\r\n        for (let i = 0; i <= verb.length - 1; i++) {\r\n            let ending = this.reverse_word(verb[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!haveReflexive) {\r\n            for (let i = 0; i <= noun.length - 1; i++) {\r\n                let ending = this.reverse_word(noun[i])\r\n\r\n                if (reversed_word.slice(0, ending.length) === ending) {\r\n                    RV = RV.replace(ending, \"\")\r\n                    reversed_word = reversed_word.replace(ending, \"\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (reversed_word[0] === 'и') {\r\n            reversed_word = reversed_word.slice(1, reversed_word.length - 1)\r\n        }\r\n\r\n        for (let i = 0; i <= derivational.length - 1; i++) {\r\n            let ending = this.reverse_word(derivational[i])\r\n\r\n            if (R2.slice(0, ending.length) === ending) {\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (R2) {\r\n            for (let i = 0; i <= derivational.length - 1; i++) {\r\n                let ending = this.reverse_word(derivational[i])\r\n\r\n                if (R2.slice(0, ending.length) === ending) {\r\n                    reversed_word = reversed_word.replace(ending, \"\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const extendedSL = superlative.concat(['н', 'ь'])\r\n        for (let i = 0; i <= extendedSL.length - 1; i++) {\r\n            let ending = this.reverse_word(extendedSL[i])\r\n\r\n            if (R2.slice(0, ending.length) === ending) {\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        return Object.assign({}, data, {\r\n            RV,\r\n            reversed_word,\r\n            word: this.reverse_word(reversed_word)\r\n        });\r\n\r\n    }\r\n\r\n    findWordParts(word) {\r\n\r\n        let reversed_word = this.reverse_word(word);\r\n        const first_volwe = Math.max(...PORTER_CONST.VOWELS.map((vowel) => {\r\n            if ((reversed_word.indexOf(vowel) !== -1) &&\r\n                (PORTER_CONST.CONSONANTS.includes(reversed_word[reversed_word.indexOf(vowel) + 1]))) return reversed_word.indexOf(vowel) - 1;\r\n            return 0;\r\n        }));\r\n\r\n        const RV = reversed_word.substr(0, first_volwe);\r\n        const R1Index = Math.min(...PORTER_CONST.CONSONANTS.map((consonant) => {\r\n            if (RV.indexOf(consonant) !== -1) return reversed_word.indexOf(consonant);\r\n            return first_volwe;\r\n        }));\r\n\r\n        const R1 = reversed_word.substr(R1Index, first_volwe - 1);\r\n        const R2Index = Math.max(...PORTER_CONST.VOWELS.map((vowel) => {\r\n            if ((RV.indexOf(vowel) !== -1) &&\r\n                (PORTER_CONST.CONSONANTS.includes(RV[RV.indexOf(vowel) + 1]))) return reversed_word.indexOf(vowel) + 1;\r\n            return R1Index;\r\n        }));\r\n\r\n        const R2 = reversed_word.substr(R1Index, R2Index);\r\n\r\n        return {\r\n            word,\r\n            reversed_word,\r\n            RV,\r\n            R1,\r\n            R2\r\n        }\r\n    }\r\n\r\n    reverse_word(word) {\r\n        return word.split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Porter } from \"../../libs/porter\";\r\nimport { Table, Form, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { dropdownOptions, sorting } from \"../../libs/sort\";\r\n\r\nclass Stemming extends Component {\r\n  componentWillMount() {\r\n    const porter = new Porter();\r\n\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.stemmedWords = porter.stemAll(this.props.state.data.words).filter(word => word !== \"\");\r\n    this.props.changeState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Dropdown\r\n            options={dropdownOptions}\r\n            defaultValue={dropdownOptions[0].value}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.stemmedWords = sorting[event.value](\r\n                newState.data.stemmedWords\r\n              );\r\n\r\n              this.props.changeState(newState);\r\n            }}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.stemmedWords.map((word, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{word}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stemming;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Form } from \"semantic-ui-react\";\r\n\r\nclass Grouping extends Component {\r\n  componentWillMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    const groupedWords = [];\r\n    this.props.state.data.stemmedWords.forEach(word => {\r\n      const existingWordId = groupedWords.findIndex(el => el.value === word);\r\n      if (existingWordId !== -1) groupedWords[existingWordId].count += 1;\r\n      else\r\n        groupedWords.push({\r\n          value: word,\r\n          count: 1\r\n        });\r\n    });\r\n    newState.data.groupedWords = groupedWords.sort((a, b) => b.count - a.count);\r\n    this.props.changeState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.groupedWords.map((words, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{words.value}</Table.Cell>\r\n                    <Table.Cell>{words.count}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grouping;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Form } from \"semantic-ui-react\";\r\n\r\nclass WeightCoefficient extends Component {\r\n  componentWillMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    this.props.state.data.weightCoef = [\r\n      { width: 1, words: newState.data.groupedWords.slice(0, 4) },\r\n      { width: 2, words: newState.data.groupedWords.slice(4, 10) },\r\n      { width: 3, words: newState.data.groupedWords.slice(10, 20) }\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.groupedWords\r\n                .slice(0, 20)\r\n                .map((words, index) => {\r\n                  return (\r\n                    <Table.Row key={index}>\r\n                      <Table.Cell>{words.value}</Table.Cell>\r\n                      <Table.Cell>{words.count}</Table.Cell>\r\n                      <Table.Cell>\r\n                        {index < 4\r\n                          ? \"1  категория\"\r\n                          : index < 10\r\n                          ? \"2  категория\"\r\n                          : \"3  категория\"}\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  );\r\n                })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeightCoefficient;\r\n","import React, { Component } from \"react\";\r\nimport { Porter } from \"../../libs/porter\";\r\nimport { Table, Form, Input } from \"semantic-ui-react\";\r\n\r\nfunction calcRelevance(_, e) {\r\n  const porter = new Porter();\r\n  const newState = JSON.parse(JSON.stringify(this.props.state));\r\n  const text = e.value\r\n    .replace(/[^A-ZА-Я]/gi, \" \")\r\n    .replace(/\\s+/g, \" \")\r\n    .toLowerCase();\r\n\r\n  const words = text.split(\" \").filter(word => word !== \"\");\r\n  const stemmedWords = porter\r\n    .stemAll(words)\r\n    .filter(word => word !== \"\" && word.length >= 3);\r\n\r\n  const matchingWords = [];\r\n  let R = 0;\r\n  let maxR = 0;\r\n\r\n  stemmedWords.forEach(word => {\r\n    let k = 0;\r\n    this.props.state.data.weightCoef.forEach(coefGroup => {\r\n      coefGroup.words.forEach(el => {\r\n        if (el.value === word) {\r\n          k = coefGroup.width;\r\n        }\r\n      });\r\n    });\r\n\r\n    if (k !== 0) {\r\n      const groupedWord = this.props.state.data.groupedWords.find(gWord => {\r\n        return gWord.value === word;\r\n      });\r\n\r\n      matchingWords.push(groupedWord.value);\r\n      R += (1 / k) * groupedWord.count;\r\n      maxR += groupedWord.count;\r\n    }\r\n  });\r\n\r\n  newState.data.relevance = {\r\n    text,\r\n    stemmedWords,\r\n    relevance: R / maxR,\r\n    matchingWords\r\n  };\r\n\r\n  this.props.changeState(newState);\r\n}\r\n\r\nclass Relevance extends Component {\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Input\r\n            icon={{ name: \"search\", circular: true, link: true }}\r\n            placeholder=\"Search ...\"\r\n            onChange={calcRelevance.bind(this)}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <b>\r\n            Коэффициент релевантности:{\" \"}\r\n            {this.props.state.data.relevance.relevance}\r\n          </b>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.relevance.matchingWords.map(\r\n                (word, index) => {\r\n                  return (\r\n                    <Table.Row key={index}>\r\n                      <Table.Cell>{word}</Table.Cell>\r\n                    </Table.Row>\r\n                  );\r\n                }\r\n              )}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Relevance;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Loader from \"./Loader\";\r\nimport Cleaner from \"./Cleaner\";\r\nimport Spliter from \"./Spliter\";\r\nimport Stemming from \"./Stemming\";\r\nimport Grouping from \"./Grouping\";\r\nimport WeightCoefficient from \"./WeightCoefficient\";\r\nimport Relevance from \"./Relevance\";\r\n\r\nimport { Tab } from \"semantic-ui-react\";\r\n\r\nclass Main extends Component {\r\n  constructor(params) {\r\n    super(params);\r\n\r\n    this.panes = [\r\n      {\r\n        menuItem: \"Загрузка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Loader\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Очистка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Cleaner\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Разделение на слова\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Spliter\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Стемминг\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Stemming\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Группировка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Grouping\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Весовые коэффициенты\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <WeightCoefficient\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Вычисление релевантности\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Relevance\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      }\r\n    ];\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab\r\n        menu={{ fluid: true, vertical: true, tabular: true, pointing: true }}\r\n        panes={this.panes}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./App.css\";\r\nimport Main from \"./Main\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      data: {\r\n        fullText: \"\",\r\n        clearedText: \"\",\r\n        words: [],\r\n        stemmedWords: [],\r\n        groupedWords: [],\r\n        weightCoef: [],\r\n        relevance: {\r\n          text: \"\",\r\n          stemmedWords: [],\r\n          relevance: \"\",\r\n          matchingWords: []\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  changeState(newState) {\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Main state={this.state} changeState={this.changeState.bind(this)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}