{"version":3,"sources":["components/Loader/index.jsx","components/Cleaner/index.jsx","libs/sort/index.js","components/Spliter/index.jsx","libs/porter/const.js","libs/porter/index.js","components/Stemming/index.jsx","components/Grouping/index.jsx","components/WeightCoefficient/index.jsx","components/Relevance/index.jsx","components/Main.jsx","components/App.jsx","index.js"],"names":["Loader","_this","this","react_default","a","createElement","Segment","placeholder","Grid","columns","stackable","textAlign","Divider","vertical","Row","verticalAlign","Column","Header","icon","Icon","name","Button","id","secondary","Input","type","encType","Form","Field","control","TextArea","label","value","props","state","data","fullText","onChange","_","event","newState","JSON","parse","stringify","changeState","autoHeight","_this2","document","getElementById","addEventListener","file","target","files","reader","FileReader","onload","result","bind","readAsText","navigator","clipboard","readText","then","text","catch","err","Component","clearText","stopSymbols","split","map","symbol","includes","join","replace","toLowerCase","Cleaner","clearedText","Object","toConsumableArray","Array","prototype","customeSort","match","QuickSort","A","length","b","p","i","concat","dropdownOptions","sorting","defaultSort","words","ascendingFromBeginningSort","localeCompare","descendingFromBeginningSort","asceningFromEndingSort","rev_a","reverse","rev_b","descendingFromEndingSort","Spliter","filter","word","Dropdown","options","defaultValue","Table","Body","index","key","Cell","PERFECTIVE_GERUND","ADJECTIVE","PARTICIPLE","REFLEXIVE","VERB","NOUN","SUPERLATIVE","DERIVATIONAL","VOWELS","CONSONANTS","Porter","classCallCheck","createClass","stem","wordParts","findWordParts","stemByWordParts","reversed_word","RV","R2","sortByLength","perfective_gerund","PORTER_CONST","sort","reflexive","adjective","participle","verb","noun","derivational","superlative","haveReflexive","haveAdjective","ending","reverse_word","slice","assign","extendedSL","first_volwe","Math","max","apply","vowel","indexOf","substr","R1Index","min","consonant","R1","R2Index","Stemming","porter","stemmedWords","stemAll","Grouping","groupedWords","forEach","existingWordId","findIndex","el","count","push","WeightCoefficient","weightCoef","width","Relevance","circular","link","e","matchingWords","R","maxR","k","coefGroup","groupedWord","find","gWord","relevance","Main","params","possibleConstructorReturn","getPrototypeOf","call","panes","menuItem","render","Tab","Pane","components_Loader","components_Cleaner","components_Spliter","components_Stemming","components_Grouping","components_WeightCoefficient","components_Relevance","menu","fluid","tabular","pointing","App","setState","className","components_Main","ReactDOM","src_components_App"],"mappings":"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","file":"static/js/main.91e5e1c6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  TextArea,\r\n  Button,\r\n  Segment,\r\n  Grid,\r\n  Icon,\r\n  Header,\r\n  Divider,\r\n  Input\r\n} from \"semantic-ui-react\";\r\n\r\nclass Loader extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <Segment placeholder>\r\n          <Grid columns={2} stackable textAlign=\"center\">\r\n            <Divider vertical>Or</Divider>\r\n            <Grid.Row verticalAlign=\"middle\">\r\n              <Grid.Column>\r\n                <Header icon>\r\n                  <Icon name=\"paste\" />С буфера обмена\r\n                </Header>\r\n                <Button id=\"upload_clipboard\" secondary>\r\n                  {\" \"}\r\n                  Вставить{\" \"}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Header icon>\r\n                  <Icon name=\"file\" />С файла\r\n                </Header>\r\n                <div>\r\n                  <Input\r\n                    id=\"upload_textfile\"\r\n                    type=\"file\"\r\n                    encType=\"multipart/form-data\"\r\n                  />\r\n                </div>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Segment>\r\n        <Form>\r\n          <Form.Field\r\n            id=\"fullText\"\r\n            control={TextArea}\r\n            label=\"Исходные данные\"\r\n            value={this.props.state.data.fullText}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.fullText = event.value;\r\n              this.props.changeState(newState);\r\n            }}\r\n            autoHeight\r\n          />\r\n        </Form>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.getElementById(\"upload_textfile\").addEventListener(\r\n      \"change\",\r\n      event => {\r\n        const files = event.target.files;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = function(event) {\r\n          const newState = JSON.parse(JSON.stringify(this.props.state));\r\n          newState.data.fullText = event.target.result;\r\n          this.props.changeState(newState);\r\n        }.bind(this);\r\n        reader.readAsText(file);\r\n      },\r\n      false\r\n    );\r\n\r\n    document.getElementById(\"upload_clipboard\").addEventListener(\r\n      \"click\",\r\n      () => {\r\n        navigator.clipboard\r\n          .readText()\r\n          .then(text => {\r\n            const newState = JSON.parse(JSON.stringify(this.props.state));\r\n            newState.data.fullText = text;\r\n            this.props.changeState(newState);\r\n          })\r\n          .catch(err => {\r\n            const newState = JSON.parse(JSON.stringify(this.props.state));\r\n            newState.data.fullText = \"\";\r\n            this.props.changeState(newState);\r\n          });\r\n      },\r\n      false\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport { Form, TextArea, Input } from \"semantic-ui-react\";\r\n\r\nfunction clearText(text, stopSymbols) {\r\n  return text\r\n    .split(\"\")\r\n    .map(symbol => {\r\n      if (stopSymbols.includes(symbol)) return \" \";\r\n      else return symbol;\r\n    })\r\n    .join(\"\")\r\n    .replace(/\\s+/g, \" \")\r\n    .toLowerCase();\r\n}\r\n\r\nclass Cleaner extends Component {\r\n  componentWillMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.clearedText = clearText(\r\n      newState.data.fullText,\r\n      newState.data.stopSymbols\r\n    );\r\n    this.props.changeState(newState);\r\n  }\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field\r\n          control={Input}\r\n          label=\"Стоп символы\"\r\n          value={this.props.state.data.stopSymbols}\r\n          onChange={(_, event) => {\r\n            const newState = JSON.parse(JSON.stringify(this.props.state));\r\n            newState.data.stopSymbols = event.value;\r\n            newState.data.clearedText = clearText(newState.data.fullText, [\r\n              ...event.value\r\n            ]);\r\n            this.props.changeState(newState);\r\n          }}\r\n        />\r\n        <Form.Field\r\n          control={TextArea}\r\n          label=\"Очищенный текст\"\r\n          value={this.props.state.data.clearedText}\r\n          autoHeight\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cleaner;\r\n","Array.prototype.customeSort = function (match) {\r\n    return QuickSort(this, match);\r\n};\r\n\r\nfunction QuickSort(A, match) {\r\n    if (A.length === 0) return [];\r\n    const a = [];\r\n    const b = [];\r\n    const p = A[0];\r\n\r\n    for (var i = 1; i < A.length; i++) {\r\n        if (match(A[i], p)) a[a.length] = A[i];\r\n        else b[b.length] = A[i];\r\n    }\r\n    return QuickSort(a, match).concat(p, QuickSort(b, match));\r\n}\r\n\r\nexport const dropdownOptions = [{\r\n        text: \"По умолчанию\",\r\n        value: 'defaultSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по возростанию с начала\",\r\n        value: 'ascendingFromBeginningSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по убыванию с начала\",\r\n        value: 'descendingFromBeginningSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по возростанию с конца\",\r\n        value: 'asceningFromEndingSort'\r\n    },\r\n    {\r\n        text: \"В алфавитном порядке по убыванию с конца\",\r\n        value: 'descendingFromEndingSort'\r\n    }\r\n];\r\n\r\nexport const sorting = {\r\n    \"defaultSort\": defaultSort,\r\n    \"ascendingFromBeginningSort\": ascendingFromBeginningSort,\r\n    \"descendingFromBeginningSort\": descendingFromBeginningSort,\r\n    \"asceningFromEndingSort\": asceningFromEndingSort,\r\n    \"descendingFromEndingSort\": descendingFromEndingSort\r\n}\r\n\r\nexport function defaultSort(words) {\r\n\r\n    return words\r\n}\r\n\r\nexport function ascendingFromBeginningSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        return a.localeCompare(b);\r\n    })\r\n}\r\n\r\nexport function descendingFromBeginningSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        return b.localeCompare(a);\r\n    })\r\n}\r\n\r\nexport function asceningFromEndingSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        const rev_a = a\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        const rev_b = b\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        return rev_a.localeCompare(rev_b);\r\n    })\r\n}\r\n\r\nexport function descendingFromEndingSort(words) {\r\n\r\n    return words.customeSort((a, b) => {\r\n        const rev_a = a\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        const rev_b = b\r\n            .split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n\r\n        return rev_b.localeCompare(rev_a);\r\n    })\r\n}","import React, { Component } from \"react\";\r\nimport { Table, Form, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { dropdownOptions, sorting } from \"../../libs/sort\";\r\n\r\nclass Spliter extends Component {\r\n  componentDidMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.words = this.props.state.data.clearedText\r\n      .split(\" \")\r\n      .filter(word => word !== \"\" && word.length >= 3);\r\n    this.props.changeState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Dropdown\r\n            options={dropdownOptions}\r\n            defaultValue={dropdownOptions[0].value}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.words = sorting[event.value](newState.data.words);\r\n\r\n              this.props.changeState(newState);\r\n            }}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.words.map((word, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{word}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spliter;\r\n","export const PERFECTIVE_GERUND = ['в', 'вши', 'вшись',\r\n    'ив', 'ивши', 'ившись', 'ыв', 'ывши', 'ывшись'\r\n]\r\nexport const ADJECTIVE = [\r\n    \"ее\",\r\n    \"ие\",\r\n    \"ые\",\r\n    \"ое\",\r\n    \"ими\",\r\n    \"ыми\",\r\n    \"ей\",\r\n    \"ий\",\r\n    \"ый\",\r\n    \"ой\",\r\n    \"ем\",\r\n    \"им\",\r\n    \"ым\",\r\n    \"ом\",\r\n    \"его\",\r\n    \"ого\",\r\n    \"ему\",\r\n    \"ому\",\r\n    \"их\",\r\n    \"ых\",\r\n    \"ую\",\r\n    \"юю\",\r\n    \"ая\",\r\n    \"яя\",\r\n    \"ою\",\r\n    \"ею\"\r\n];\r\n\r\nexport const PARTICIPLE = [\r\n    \"ем\", \"нн\", \"вш\", \"ющ\", \"щ\",\r\n    \"ивш\", \"ывш\", \"ующ\"\r\n];\r\n\r\nexport const REFLEXIVE = ['ся', 'сь'];\r\n\r\nexport const VERB = [\r\n    'ла', 'на', 'ете', 'йте', 'ли', 'й', 'л', 'ем', 'н', 'ло', 'но', 'ет', 'ют', 'ны', 'ть', 'ешь', 'нно',\r\n    'ила', 'ыла', 'ена', 'ейте', 'уйте', 'ите', 'или', 'ыли', 'ей', 'уй', 'ил', 'ыл', 'им', 'ым', 'ен', 'ило', 'ыло', 'ено', 'ят', 'ует', 'уют', 'ит', 'ыт', 'ены', 'ить', 'ыть', 'ишь', 'ую', 'ю'\r\n]\r\n\r\nexport const NOUN = [\r\n    \"а\",\r\n    \"ев\",\r\n    \"ов\",\r\n    \"ие\",\r\n    \"ье\",\r\n    \"е\",\r\n    \"иями\",\r\n    \"ями\",\r\n    \"ами\",\r\n    \"еи\",\r\n    \"ии\",\r\n    \"и\",\r\n    \"ией\",\r\n    \"ей\",\r\n    \"ой\",\r\n    \"ий\",\r\n    \"й\",\r\n    \"иям\",\r\n    \"ям\",\r\n    \"ием\",\r\n    \"ем\",\r\n    \"ам\",\r\n    \"ом\",\r\n    \"о\",\r\n    \"у\",\r\n    \"ах\",\r\n    \"иях\",\r\n    \"ях\",\r\n    \"ы\",\r\n    \"ь\",\r\n    \"ию\",\r\n    \"ью\",\r\n    \"ю\",\r\n    \"ия\",\r\n    \"ья\",\r\n    \"я\"\r\n];\r\n\r\nexport const SUPERLATIVE = [\"ейш\", \"ейше\"];\r\nexport const DERIVATIONAL = [\"ост\", \"ость\"];\r\n\r\nexport const VOWELS = ['а', 'е', 'ё', 'и', 'о', 'у', 'ы', 'э', 'ю', 'я']\r\nexport const CONSONANTS = ['б', 'в', 'г', 'д', 'ж', 'з', 'й', 'к', 'л', 'м', 'н', 'п', 'р', 'с', 'т', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь']","import * as PORTER_CONST from \"./const\";\r\n\r\nexport class Porter {\r\n\r\n    stemAll(words) {\r\n        return words.map(word => this.stem(word));\r\n    }\r\n\r\n    stem(word) {\r\n\r\n        const wordParts = this.findWordParts(word);\r\n        const stemmedWord = this.stemByWordParts(wordParts).word;\r\n\r\n        return stemmedWord\r\n    }\r\n\r\n    stemByWordParts(data) {\r\n\r\n        let reversed_word = data.reversed_word;\r\n        let RV = data.RV;\r\n        let R2 = data.R2;\r\n        const sortByLength = (a, b) => a.length >= b.length ? -1 : 1;\r\n        const perfective_gerund = PORTER_CONST.PERFECTIVE_GERUND.sort(sortByLength);\r\n        const reflexive = PORTER_CONST.REFLEXIVE.sort(sortByLength);\r\n        const adjective = PORTER_CONST.ADJECTIVE.sort(sortByLength);\r\n        const participle = PORTER_CONST.PARTICIPLE.sort(sortByLength);\r\n        const verb = PORTER_CONST.VERB.sort(sortByLength);\r\n        const noun = PORTER_CONST.NOUN.sort(sortByLength);\r\n        const derivational = PORTER_CONST.DERIVATIONAL.sort(sortByLength);\r\n        const superlative = PORTER_CONST.SUPERLATIVE.sort(sortByLength);\r\n\r\n        let haveReflexive = false;\r\n        let haveAdjective = false;\r\n\r\n        for (let i = 0; i <= perfective_gerund.length - 1; i++) {\r\n            let ending = this.reverse_word(perfective_gerund[i])\r\n\r\n            if (reversed_word.slice(0, ending.length) === ending) {\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                return Object.assign({}, data, {\r\n                    reversed_word,\r\n                    word: this.reverse_word(reversed_word)\r\n                });\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i <= reflexive.length - 1; i++) {\r\n            let ending = this.reverse_word(reflexive[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                haveReflexive = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i <= adjective.length - 1; i++) {\r\n            let ending = this.reverse_word(adjective[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                haveAdjective = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i <= participle.length - 1; i++) {\r\n            let ending = this.reverse_word(participle[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (haveAdjective) return Object.assign({}, data, {\r\n            RV,\r\n            reversed_word,\r\n            word: this.reverse_word(reversed_word)\r\n        });\r\n\r\n        for (let i = 0; i <= verb.length - 1; i++) {\r\n            let ending = this.reverse_word(verb[i]);\r\n\r\n            if (RV.slice(0, ending.length) === ending) {\r\n                RV = RV.replace(ending, \"\")\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!haveReflexive) {\r\n            for (let i = 0; i <= noun.length - 1; i++) {\r\n                let ending = this.reverse_word(noun[i])\r\n\r\n                if (reversed_word.slice(0, ending.length) === ending) {\r\n                    RV = RV.replace(ending, \"\")\r\n                    reversed_word = reversed_word.replace(ending, \"\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (reversed_word[0] === 'и') {\r\n            reversed_word = reversed_word.slice(1, reversed_word.length - 1)\r\n        }\r\n\r\n        for (let i = 0; i <= derivational.length - 1; i++) {\r\n            let ending = this.reverse_word(derivational[i])\r\n\r\n            if (R2.slice(0, ending.length) === ending) {\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (R2) {\r\n            for (let i = 0; i <= derivational.length - 1; i++) {\r\n                let ending = this.reverse_word(derivational[i])\r\n\r\n                if (R2.slice(0, ending.length) === ending) {\r\n                    reversed_word = reversed_word.replace(ending, \"\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const extendedSL = superlative.concat(['н', 'ь'])\r\n        for (let i = 0; i <= extendedSL.length - 1; i++) {\r\n            let ending = this.reverse_word(extendedSL[i])\r\n\r\n            if (R2.slice(0, ending.length) === ending) {\r\n                reversed_word = reversed_word.replace(ending, \"\");\r\n                break;\r\n            }\r\n        }\r\n\r\n        return Object.assign({}, data, {\r\n            RV,\r\n            reversed_word,\r\n            word: this.reverse_word(reversed_word)\r\n        });\r\n\r\n    }\r\n\r\n    findWordParts(word) {\r\n\r\n        let reversed_word = this.reverse_word(word);\r\n        const first_volwe = Math.max(...PORTER_CONST.VOWELS.map((vowel) => {\r\n            if ((reversed_word.indexOf(vowel) !== -1) &&\r\n                (PORTER_CONST.CONSONANTS.includes(reversed_word[reversed_word.indexOf(vowel) + 1]))) return reversed_word.indexOf(vowel) - 1;\r\n            return 0;\r\n        }));\r\n\r\n        const RV = reversed_word.substr(0, first_volwe);\r\n        const R1Index = Math.min(...PORTER_CONST.CONSONANTS.map((consonant) => {\r\n            if (RV.indexOf(consonant) !== -1) return reversed_word.indexOf(consonant);\r\n            return first_volwe;\r\n        }));\r\n\r\n        const R1 = reversed_word.substr(R1Index, first_volwe - 1);\r\n        const R2Index = Math.max(...PORTER_CONST.VOWELS.map((vowel) => {\r\n            if ((RV.indexOf(vowel) !== -1) &&\r\n                (PORTER_CONST.CONSONANTS.includes(RV[RV.indexOf(vowel) + 1]))) return reversed_word.indexOf(vowel) + 1;\r\n            return R1Index;\r\n        }));\r\n\r\n        const R2 = reversed_word.substr(R1Index, R2Index);\r\n\r\n        return {\r\n            word,\r\n            reversed_word,\r\n            RV,\r\n            R1,\r\n            R2\r\n        }\r\n    }\r\n\r\n    reverse_word(word) {\r\n        return word.split(\"\")\r\n            .reverse()\r\n            .join(\"\");\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Porter } from \"../../libs/porter\";\r\nimport { Table, Form, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { dropdownOptions, sorting } from \"../../libs/sort\";\r\n\r\nclass Stemming extends Component {\r\n  componentWillMount() {\r\n    const porter = new Porter();\r\n\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    newState.data.stemmedWords = porter.stemAll(this.props.state.data.words).filter(word => word !== \"\");\r\n    this.props.changeState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Dropdown\r\n            options={dropdownOptions}\r\n            defaultValue={dropdownOptions[0].value}\r\n            onChange={(_, event) => {\r\n              const newState = JSON.parse(JSON.stringify(this.props.state));\r\n              newState.data.stemmedWords = sorting[event.value](\r\n                newState.data.stemmedWords\r\n              );\r\n\r\n              this.props.changeState(newState);\r\n            }}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.stemmedWords.map((word, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{word}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stemming;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Form } from \"semantic-ui-react\";\r\n\r\nclass Grouping extends Component {\r\n  componentWillMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    const groupedWords = [];\r\n    this.props.state.data.stemmedWords.forEach(word => {\r\n      const existingWordId = groupedWords.findIndex(el => el.value === word);\r\n      if (existingWordId !== -1) groupedWords[existingWordId].count += 1;\r\n      else\r\n        groupedWords.push({\r\n          value: word,\r\n          count: 1\r\n        });\r\n    });\r\n    newState.data.groupedWords = groupedWords.sort((a, b) => b.count - a.count);\r\n    this.props.changeState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.groupedWords.map((words, index) => {\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{words.value}</Table.Cell>\r\n                    <Table.Cell>{words.count}</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grouping;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Form } from \"semantic-ui-react\";\r\n\r\nclass WeightCoefficient extends Component {\r\n  componentWillMount() {\r\n    const newState = JSON.parse(JSON.stringify(this.props.state));\r\n    this.props.state.data.weightCoef = [\r\n      { width: 1, words: newState.data.groupedWords.slice(0, 4) },\r\n      { width: 2, words: newState.data.groupedWords.slice(4, 10) },\r\n      { width: 3, words: newState.data.groupedWords.slice(10, 20) }\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.groupedWords\r\n                .slice(0, 20)\r\n                .map((words, index) => {\r\n                  return (\r\n                    <Table.Row key={index}>\r\n                      <Table.Cell>{words.value}</Table.Cell>\r\n                      <Table.Cell>{words.count}</Table.Cell>\r\n                      <Table.Cell>\r\n                        {index < 4\r\n                          ? \"1  категория\"\r\n                          : index < 10\r\n                          ? \"2  категория\"\r\n                          : \"3  категория\"}\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  );\r\n                })}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeightCoefficient;\r\n","import React, { Component } from \"react\";\r\nimport { Porter } from \"../../libs/porter\";\r\nimport { Table, Form, Input } from \"semantic-ui-react\";\r\n\r\nfunction calcRelevance(_, e) {\r\n  const porter = new Porter();\r\n  const newState = JSON.parse(JSON.stringify(this.props.state));\r\n  const text = e.value\r\n    .split(\"\")\r\n    .map(symbol => {\r\n      if (this.props.state.data.stopSymbols.includes(symbol)) return \" \";\r\n      else return symbol;\r\n    })\r\n    .join(\"\")\r\n    .replace(/\\s+/g, \" \")\r\n    .toLowerCase();\r\n\r\n  const words = text.split(\" \").filter(word => word !== \"\");\r\n  const stemmedWords = porter\r\n    .stemAll(words)\r\n    .filter(word => word !== \"\" && word.length >= 3);\r\n\r\n  const matchingWords = [];\r\n  let R = 0;\r\n  let maxR = 0;\r\n\r\n  stemmedWords.forEach(word => {\r\n    let k = 0;\r\n    this.props.state.data.weightCoef.forEach(coefGroup => {\r\n      coefGroup.words.forEach(el => {\r\n        if (el.value === word) {\r\n          k = coefGroup.width;\r\n        }\r\n      });\r\n    });\r\n\r\n    if (k !== 0) {\r\n      const groupedWord = this.props.state.data.groupedWords.find(gWord => {\r\n        return gWord.value === word;\r\n      });\r\n\r\n      matchingWords.push(groupedWord.value);\r\n      R += (1 / k) * groupedWord.count;\r\n      maxR += groupedWord.count;\r\n    }\r\n  });\r\n\r\n  newState.data.relevance = {\r\n    text,\r\n    stemmedWords,\r\n    relevance: R / maxR,\r\n    matchingWords\r\n  };\r\n\r\n  this.props.changeState(newState);\r\n}\r\n\r\nclass Relevance extends Component {\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <Input\r\n            icon={{ name: \"search\", circular: true, link: true }}\r\n            placeholder=\"Search ...\"\r\n            onChange={calcRelevance.bind(this)}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <b>\r\n            Коэффициент релевантности:{\" \"}\r\n            {this.props.state.data.relevance.relevance}\r\n          </b>\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Table>\r\n            <Table.Body>\r\n              {this.props.state.data.relevance.matchingWords.map(\r\n                (word, index) => {\r\n                  return (\r\n                    <Table.Row key={index}>\r\n                      <Table.Cell>{word}</Table.Cell>\r\n                    </Table.Row>\r\n                  );\r\n                }\r\n              )}\r\n            </Table.Body>\r\n          </Table>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Relevance;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Loader from \"./Loader\";\r\nimport Cleaner from \"./Cleaner\";\r\nimport Spliter from \"./Spliter\";\r\nimport Stemming from \"./Stemming\";\r\nimport Grouping from \"./Grouping\";\r\nimport WeightCoefficient from \"./WeightCoefficient\";\r\nimport Relevance from \"./Relevance\";\r\n\r\nimport { Tab } from \"semantic-ui-react\";\r\n\r\nclass Main extends Component {\r\n  constructor(params) {\r\n    super(params);\r\n\r\n    this.panes = [\r\n      {\r\n        menuItem: \"Загрузка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Loader\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Очистка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Cleaner\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Разделение на слова\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Spliter\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Стемминг\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Stemming\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Группировка\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Grouping\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Весовые коэффициенты\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <WeightCoefficient\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      },\r\n      {\r\n        menuItem: \"Вычисление релевантности\",\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <Relevance\r\n              state={this.props.state}\r\n              changeState={this.props.changeState}\r\n            />\r\n          </Tab.Pane>\r\n        )\r\n      }\r\n    ];\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab\r\n        menu={{ fluid: true, vertical: true, tabular: true, pointing: true }}\r\n        panes={this.panes}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./App.css\";\r\nimport Main from \"./Main\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      data: {\r\n        fullText: \"\",\r\n        stopSymbols: `0123456789.,<>?!-:;{}[]/'()=&|^+-\"\\\\`,\r\n        clearedText: \"\",\r\n        words: [],\r\n        stemmedWords: [],\r\n        groupedWords: [],\r\n        weightCoef: [],\r\n        relevance: {\r\n          text: \"\",\r\n          stemmedWords: [],\r\n          relevance: \"\",\r\n          matchingWords: []\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  changeState(newState) {\r\n    this.setState(newState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Main state={this.state} changeState={this.changeState.bind(this)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}